         36080104 function calls (36074750 primitive calls) in 13.827 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        3    4.138    1.379    5.725    1.908 main.py:145(get_graph)
        3    4.045    1.348    6.421    2.140 basic_blocks.py:141(liveness)
 19259494    1.478    0.000    1.478    0.000 {method 'add' of 'set' objects}
  2167689    0.971    0.000    0.971    0.000 {hasattr}
 10102805    0.727    0.000    0.727    0.000 {method 'has_key' of 'dict' objects}
   346552    0.706    0.000    0.706    0.000 copy.py:113(_copy_with_constructor)
      120    0.281    0.002    1.116    0.009 main.py:64(spill)
        3    0.277    0.092    1.569    0.523 main.py:87(spill_and_fill)
   346552    0.222    0.000    0.969    0.000 copy.py:66(copy)
   401596    0.192    0.000    0.592    0.000 main.py:20(is_operand)
   317750    0.141    0.000    0.141    0.000 {method 'insert' of 'list' objects}
   401596    0.126    0.000    0.241    0.000 main.py:14(is_assignee)
   240703    0.111    0.000    0.111    0.000 {range}
  1480733    0.103    0.000    0.103    0.000 {len}
   411922    0.048    0.000    0.048    0.000 {method 'discard' of 'set' objects}
   346552    0.041    0.000    0.041    0.000 {method 'get' of 'dict' objects}
     5241    0.041    0.000    0.041    0.000 {method 'keys' of 'dict' objects}
    38272    0.033    0.000    0.033    0.000 {method 'union' of 'set' objects}
        1    0.018    0.018    0.034    0.034 asm_gen.py:10(gen_asm)
      120    0.014    0.000    0.014    0.000 {max}
    71693    0.013    0.000    0.013    0.000 {isinstance}
        1    0.012    0.012    0.012    0.012 main.py:29(color)
        1    0.009    0.009    0.016    0.016 main.py:213(read_input)
        1    0.008    0.008    0.016    0.016 main.py:222(write_output)
    36116    0.006    0.000    0.006    0.000 {method 'rstrip' of 'str' objects}
        1    0.005    0.005   13.725   13.725 main.py:136(allocate_registers)
      939    0.005    0.000    0.005    0.000 {zip}
        3    0.004    0.001    0.004    0.001 main.py:198(get_live_ranges)
   1966/1    0.004    0.000    0.017    0.017 tacs_gen.py:76(tac_expression)
     5581    0.004    0.000    0.004    0.000 asm_gen.py:6(get_color)
        1    0.003    0.003   13.827   13.827 main.py:1(<module>)
   1966/1    0.003    0.000    0.007    0.007 ast_gen.py:87(ast_expression)
     9747    0.003    0.000    0.003    0.000 {method 'write' of 'file' objects}
     3574    0.002    0.000    0.002    0.000 asm.py:16(__str__)
     3574    0.002    0.000    0.002    0.000 asm.py:12(__init__)
        1    0.002    0.002    0.005    0.005 basic_blocks.py:5(make_bbs)
     3241    0.002    0.000    0.002    0.000 asm.py:3(__init__)
      313    0.002    0.000    0.003    0.000 basic_blocks.py:327(__init__)
    18058    0.002    0.000    0.002    0.000 {next}
     1203    0.001    0.000    0.001    0.000 tacs.py:4(__init__)
        1    0.001    0.001    0.010    0.010 ast_gen.py:4(generate_ast)
     3241    0.001    0.000    0.001    0.000 asm.py:6(__str__)
    18071    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
    10422    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
    104/8    0.001    0.000    0.007    0.001 tacs_gen.py:162(tac_if)
      748    0.001    0.000    0.003    0.000 tacs_gen.py:344(tac_identifier)
      696    0.001    0.000    0.001    0.000 tacs.py:231(__init__)
     2827    0.001    0.000    0.001    0.000 tacs_gen.py:38(tacs_append)
     1748    0.001    0.000    0.001    0.000 tacs_gen.py:9(ns)
      748    0.001    0.000    0.001    0.000 ast_gen.py:375(ast_identifier)
     1126    0.001    0.000    0.001    0.000 tacs_gen.py:21(get_symbol)
    209/1    0.001    0.000    0.007    0.007 ast_gen.py:220(ast_block)
      240    0.001    0.000    0.001    0.000 tacs.py:224(__init__)
        1    0.000    0.000   13.823   13.823 main.py:235(main)
      748    0.000    0.000    0.000    0.000 ast.py:448(__init__)
        2    0.000    0.000    0.000    0.000 {method 'close' of 'file' objects}
        1    0.000    0.000    0.000    0.000 ast.py:3(<module>)
      132    0.000    0.000    0.001    0.000 ast_gen.py:228(ast_binding)
      246    0.000    0.000    0.004    0.000 ast_gen.py:148(ast_assign)
      246    0.000    0.000    0.010    0.000 tacs_gen.py:133(tac_assign)
     1750    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 tacs.py:3(<module>)
        1    0.000    0.000    0.000    0.000 asm.py:2(<module>)
      417    0.000    0.000    0.000    0.000 asm.py:154(__init__)
      312    0.000    0.000    0.000    0.000 asm.py:187(__str__)
      412    0.000    0.000    0.000    0.000 ast.py:352(__init__)
      246    0.000    0.000    0.000    0.000 ast.py:114(__init__)
      417    0.000    0.000    0.000    0.000 asm.py:177(__str__)
      418    0.000    0.000    0.000    0.000 asm.py:145(__init__)
    103/1    0.000    0.000    0.003    0.003 tacs_gen.py:282(tac_multiply)
      417    0.000    0.000    0.000    0.000 tacs_gen.py:15(nl)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:268(tac_plus)
      417    0.000    0.000    0.000    0.000 asm.py:174(__init__)
      312    0.000    0.000    0.000    0.000 asm.py:183(__init__)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:291(ast_plus)
      417    0.000    0.000    0.000    0.000 asm.py:157(__str__)
    209/1    0.000    0.000    0.016    0.016 tacs_gen.py:222(tac_block)
      132    0.000    0.000    0.000    0.000 tacs_gen.py:227(tac_binding)
      418    0.000    0.000    0.000    0.000 asm.py:148(__str__)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:275(tac_minus)
      132    0.000    0.000    0.000    0.000 ast.py:244(__init__)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:289(tac_divide)
    104/8    0.000    0.000    0.003    0.000 ast_gen.py:204(ast_if)
      246    0.000    0.000    0.000    0.000 asm.py:112(__str__)
      313    0.000    0.000    0.000    0.000 tacs.py:202(__init__)
      208    0.000    0.000    0.000    0.000 asm.py:231(__init__)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:315(ast_divide)
      103    0.000    0.000    0.000    0.000 tacs.py:12(__init__)
        2    0.000    0.000    0.000    0.000 {open}
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:307(ast_times)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:299(ast_minus)
      246    0.000    0.000    0.000    0.000 asm.py:109(__init__)
      208    0.000    0.000    0.000    0.000 asm.py:234(__str__)
       38    0.000    0.000    0.001    0.000 tacs_gen.py:310(tac_eq)
      104    0.000    0.000    0.000    0.000 tacs_gen.py:329(tac_int)
      208    0.000    0.000    0.000    0.000 tacs.py:216(__init__)
      104    0.000    0.000    0.000    0.000 ast_gen.py:357(ast_integer)
      209    0.000    0.000    0.000    0.000 ast.py:229(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:76(__str__)
      104    0.000    0.000    0.000    0.000 ast.py:368(__init__)
      104    0.000    0.000    0.000    0.000 asm.py:62(__init__)
      104    0.000    0.000    0.000    0.000 asm.py:202(__init__)
      104    0.000    0.000    0.000    0.000 asm.py:206(__str__)
      103    0.000    0.000    0.000    0.000 tacs.py:30(__init__)
      208    0.000    0.000    0.000    0.000 tacs.py:195(__init__)
      104    0.000    0.000    0.000    0.000 asm.py:66(__str__)
      103    0.000    0.000    0.000    0.000 asm.py:36(__str__)
        1    0.000    0.000    0.000    0.000 tacs_gen.py:1(<module>)
      103    0.000    0.000    0.000    0.000 tacs.py:39(__init__)
       32    0.000    0.000    0.001    0.000 tacs_gen.py:303(tac_le)
        1    0.000    0.000    0.007    0.007 ast_gen.py:247(ast_let)
      103    0.000    0.000    0.000    0.000 asm.py:56(__str__)
      132    0.000    0.000    0.000    0.000 tacs.py:129(__init__)
      103    0.000    0.000    0.000    0.000 tacs.py:21(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:46(__str__)
       34    0.000    0.000    0.001    0.000 tacs_gen.py:296(tac_lt)
      103    0.000    0.000    0.000    0.000 asm.py:42(__init__)
      104    0.000    0.000    0.000    0.000 tacs.py:77(__init__)
      104    0.000    0.000    0.000    0.000 ast.py:197(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:82(__init__)
      104    0.000    0.000    0.000    0.000 tacs.py:102(__init__)
       12    0.000    0.000    0.000    0.000 ast_gen.py:192(ast_self_dispatch)
      103    0.000    0.000    0.000    0.000 asm.py:72(__init__)
       38    0.000    0.000    0.000    0.000 ast_gen.py:339(ast_eq)
        1    0.000    0.000    0.017    0.017 tacs_gen.py:236(tac_let)
       32    0.000    0.000    0.000    0.000 tacs.py:58(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:32(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:52(__init__)
       12    0.000    0.000    0.000    0.000 tacs_gen.py:145(tac_self_dispatch)
      104    0.000    0.000    0.000    0.000 ast.py:410(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:222(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:85(__str__)
       34    0.000    0.000    0.000    0.000 tacs.py:49(__init__)
       32    0.000    0.000    0.000    0.000 ast_gen.py:331(ast_le)
       26    0.000    0.000    0.000    0.000 tacs_gen.py:339(tac_boolean)
        1    0.000    0.000    0.000    0.000 asm_gen.py:1(<module>)
       34    0.000    0.000    0.000    0.000 asm.py:91(__init__)
        1    0.000    0.000    0.000    0.000 basic_blocks.py:1(<module>)
       38    0.000    0.000    0.000    0.000 tacs.py:67(__init__)
       34    0.000    0.000    0.000    0.000 ast_gen.py:323(ast_lt)
       34    0.000    0.000    0.000    0.000 asm.py:94(__str__)
       26    0.000    0.000    0.000    0.000 tacs.py:85(__init__)
      103    0.000    0.000    0.000    0.000 asm.py:225(__str__)
        1    0.000    0.000    0.017    0.017 tacs_gen.py:55(tac_feature)
       26    0.000    0.000    0.000    0.000 ast.py:436(__init__)
       32    0.000    0.000    0.000    0.000 asm.py:103(__str__)
        3    0.000    0.000    0.000    0.000 tacs_gen.py:34(pop_table)
       12    0.000    0.000    0.000    0.000 asm.py:136(__init__)
        1    0.000    0.000    0.000    0.000 ast_gen.py:1(<module>)
       12    0.000    0.000    0.000    0.000 tacs.py:147(__init__)
       32    0.000    0.000    0.000    0.000 asm.py:100(__init__)
       14    0.000    0.000    0.000    0.000 ast_gen.py:367(ast_true)
       12    0.000    0.000    0.000    0.000 ast.py:178(__init__)
       12    0.000    0.000    0.000    0.000 asm.py:139(__str__)
        1    0.000    0.000    0.007    0.007 ast_gen.py:51(ast_feature)
        1    0.000    0.000    0.007    0.007 ast_gen.py:29(ast_class)
        1    0.000    0.000    0.007    0.007 ast_gen.py:21(ast)
       12    0.000    0.000    0.000    0.000 ast_gen.py:371(ast_false)
        1    0.000    0.000    0.000    0.000 ast.py:15(__init__)
        3    0.000    0.000    0.000    0.000 tacs_gen.py:30(push_table)
        1    0.000    0.000    0.000    0.000 asm.py:26(__str__)
        1    0.000    0.000    0.000    0.000 ast.py:46(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:156(TACOutString)
        1    0.000    0.000    0.000    0.000 asm.py:144(pushq)
        1    0.000    0.000    0.000    0.000 ast.py:94(ASTFormal)
        1    0.000    0.000    0.000    0.000 ast.py:351(ASTBinOp)
        1    0.000    0.000    0.000    0.000 tacs.py:66(TACEqual)
        1    0.000    0.000    0.000    0.000 asm.py:90(jl)
        1    0.000    0.000    0.000    0.000 tacs.py:48(TACLT)
        1    0.000    0.000    0.000    0.000 asm.py:126(ret)
        1    0.000    0.000    0.000    0.000 ast.py:447(ASTIdentifier)
        1    0.000    0.000    0.017    0.017 tacs_gen.py:47(tac_class)
        1    0.000    0.000    0.000    0.000 tacs.py:3(TACAssign)
        1    0.000    0.000    0.000    0.000 ast.py:422(ASTString)
        1    0.000    0.000    0.000    0.000 tacs.py:20(TACMinus)
        1    0.000    0.000    0.017    0.017 tacs_gen.py:42(tac_ast)
        1    0.000    0.000    0.000    0.000 asm.py:253(__str__)
        1    0.000    0.000    0.000    0.000 asm.py:117(jnz)
        1    0.000    0.000    0.000    0.000 tacs.py:101(TACNot)
        1    0.000    0.000    0.000    0.000 asm.py:61(subq)
        1    0.000    0.000    0.000    0.000 asm.py:2(comment)
        1    0.000    0.000    0.000    0.000 basic_blocks.py:326(BasicBlock)
        1    0.000    0.000    0.000    0.000 ast.py:271(ASTLet)
        1    0.000    0.000    0.000    0.000 ast.py:323(ASTNew)
        1    0.000    0.000    0.000    0.000 {iter}
        1    0.000    0.000    0.000    0.000 asm.py:108(je)
        1    0.000    0.000    0.000    0.000 asm.py:135(call)
        1    0.000    0.000    0.000    0.000 asm.py:192(negl)
        1    0.000    0.000    0.000    0.000 asm.py:250(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:137(TACIsVoid)
        1    0.000    0.000    0.000    0.000 asm.py:22(__init__)
        1    0.000    0.000    0.000    0.000 asm.py:99(jle)
        1    0.000    0.000    0.000    0.000 asm.py:201(xorl)
        1    0.000    0.000    0.000    0.000 tacs.py:201(TACLabel)
        1    0.000    0.000    0.000    0.000 tacs.py:184(TACAbort)
        1    0.000    0.000    0.000    0.000 ast.py:272(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:4(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:152(ASTStaticDispatch)
        1    0.000    0.000    0.000    0.000 asm.py:51(subl)
        1    0.000    0.000    0.000    0.000 ast.py:228(ASTBlock)
        1    0.000    0.000    0.000    0.000 asm.py:262(__str__)
        1    0.000    0.000    0.000    0.000 tacs.py:230(TACLoad)
        1    0.000    0.000    0.000    0.000 tacs.py:119(TACNew)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 asm.py:211(xchgl)
        1    0.000    0.000    0.000    0.000 ast.py:113(ASTAssign)
        1    0.000    0.000    0.000    0.000 asm.py:230(jmp)
        1    0.000    0.000    0.000    0.000 tacs.py:223(TACStore)
        1    0.000    0.000    0.000    0.000 tacs.py:76(TACInt)
        1    0.000    0.000    0.000    0.000 tacs.py:175(TACInString)
        1    0.000    0.000    0.000    0.000 tacs.py:57(TACLEQ)
        1    0.000    0.000    0.000    0.000 asm.py:258(ret)
        1    0.000    0.000    0.000    0.000 ast.py:288(ASTCaseElement)
        1    0.000    0.000    0.000    0.000 tacs.py:209(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:306(ASTCase)
        1    0.000    0.000    0.000    0.000 ast.py:45(ASTFeature)
        1    0.000    0.000    0.000    0.000 tacs.py:38(TACDivide)
        1    0.000    0.000    0.000    0.000 ast.py:3(AST)
        1    0.000    0.000    0.000    0.000 ast.py:177(ASTSelfDispatch)
        1    0.000    0.000    0.000    0.000 tacs.py:208(TACReturn)
        1    0.000    0.000    0.000    0.000 ast.py:409(ASTInteger)
        1    0.000    0.000    0.000    0.000 asm.py:153(popq)
        1    0.000    0.000    0.000    0.000 ast.py:243(ASTBinding)
        1    0.000    0.000    0.000    0.000 ast.py:14(ASTClass)
        1    0.000    0.000    0.000    0.000 ast.py:130(ASTDynamicDispatch)
        1    0.000    0.000    0.000    0.000 ast.py:383(ASTNot)
        1    0.000    0.000    0.000    0.000 ast.py:367(ASTBoolOp)
        1    0.000    0.000    0.000    0.000 asm.py:41(addq)
        1    0.000    0.000    0.000    0.000 tacs.py:11(TACPlus)
        1    0.000    0.000    0.000    0.000 ast.py:213(ASTWhile)
        1    0.000    0.000    0.000    0.000 asm.py:31(addl)
        1    0.000    0.000    0.000    0.000 asm.py:259(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:215(TACBt)
        1    0.000    0.000    0.000    0.000 tacs.py:84(TACBool)
        1    0.000    0.000    0.000    0.000 asm.py:173(label)
        1    0.000    0.000    0.000    0.000 asm.py:221(cltd)
        1    0.000    0.000    0.000    0.000 asm.py:182(cmpl)
        1    0.000    0.000    0.000    0.000 ast.py:338(ASTIsVoid)
        1    0.000    0.000    0.000    0.000 asm.py:11(movl)
        1    0.000    0.000    0.000    0.000 tacs.py:128(TACDefault)
        1    0.000    0.000    0.000    0.000 tacs.py:29(TACMultiply)
        1    0.000    0.000    0.000    0.000 tacs.py:92(TACString)
        1    0.000    0.000    0.000    0.000 ast.py:396(ASTNegate)
        1    0.000    0.000    0.000    0.000 asm.py:239(leaq)
        1    0.000    0.000    0.000    0.000 tacs.py:194(TACJmp)
        1    0.000    0.000    0.000    0.000 asm.py:21(movq)
        1    0.000    0.000    0.000    0.000 asm.py:71(imull)
        1    0.000    0.000    0.000    0.000 tacs.py:146(TACOutInt)
        1    0.000    0.000    0.000    0.000 ast.py:110(ASTExpression)
        1    0.000    0.000    0.000    0.000 asm.py:81(idivl)
        1    0.000    0.000    0.000    0.000 ast.py:196(ASTIf)
        1    0.000    0.000    0.000    0.000 tacs.py:166(TACInInt)
        1    0.000    0.000    0.000    0.000 asm.py:249(leave)
        1    0.000    0.000    0.000    0.000 tacs.py:110(TACNeg)
        1    0.000    0.000    0.000    0.000 ast.py:435(ASTBoolean)


