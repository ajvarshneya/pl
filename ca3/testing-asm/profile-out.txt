         6010495 function calls (6005141 primitive calls) in 4.288 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 asm.py:108(je)
        1    0.000    0.000    0.000    0.000 asm.py:11(movl)
        1    0.000    0.000    0.000    0.000 asm.py:117(jnz)
        1    0.000    0.000    0.000    0.000 asm.py:126(ret)
        1    0.000    0.000    0.000    0.000 asm.py:135(call)
        1    0.000    0.000    0.000    0.000 asm.py:144(pushq)
        1    0.000    0.000    0.000    0.000 asm.py:153(popq)
        1    0.000    0.000    0.000    0.000 asm.py:173(label)
        1    0.000    0.000    0.000    0.000 asm.py:182(cmpl)
        1    0.000    0.000    0.000    0.000 asm.py:192(negl)
        1    0.000    0.000    0.000    0.000 asm.py:2(<module>)
        1    0.000    0.000    0.000    0.000 asm.py:2(comment)
        1    0.000    0.000    0.000    0.000 asm.py:201(xorl)
        1    0.000    0.000    0.000    0.000 asm.py:21(movq)
        1    0.000    0.000    0.000    0.000 asm.py:211(xchgl)
        1    0.000    0.000    0.000    0.000 asm.py:221(cltd)
        1    0.000    0.000    0.000    0.000 asm.py:230(jmp)
        1    0.000    0.000    0.000    0.000 asm.py:239(leaq)
        1    0.000    0.000    0.000    0.000 asm.py:249(leave)
        1    0.000    0.000    0.000    0.000 asm.py:258(ret)
        1    0.000    0.000    0.000    0.000 asm.py:31(addl)
        1    0.000    0.000    0.000    0.000 asm.py:41(addq)
        1    0.000    0.000    0.000    0.000 asm.py:51(subl)
        1    0.000    0.000    0.000    0.000 asm.py:61(subq)
        1    0.000    0.000    0.000    0.000 asm.py:71(imull)
        1    0.000    0.000    0.000    0.000 asm.py:81(idivl)
        1    0.000    0.000    0.000    0.000 asm.py:90(jl)
        1    0.000    0.000    0.000    0.000 asm.py:99(jle)
        1    0.000    0.000    0.000    0.000 asm_gen.py:1(<module>)
        1    0.000    0.000    0.000    0.000 ast.py:110(ASTExpression)
        1    0.000    0.000    0.000    0.000 ast.py:113(ASTAssign)
      246    0.000    0.000    0.000    0.000 ast.py:114(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:130(ASTDynamicDispatch)
        1    0.000    0.000    0.000    0.000 ast.py:14(ASTClass)
        1    0.000    0.000    0.000    0.000 ast.py:15(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:152(ASTStaticDispatch)
        1    0.000    0.000    0.000    0.000 ast.py:177(ASTSelfDispatch)
       12    0.000    0.000    0.000    0.000 ast.py:178(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:196(ASTIf)
      104    0.000    0.000    0.000    0.000 ast.py:197(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:213(ASTWhile)
        1    0.000    0.000    0.000    0.000 ast.py:228(ASTBlock)
      209    0.000    0.000    0.000    0.000 ast.py:229(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:243(ASTBinding)
      132    0.000    0.000    0.000    0.000 ast.py:244(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:271(ASTLet)
        1    0.000    0.000    0.000    0.000 ast.py:272(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:288(ASTCaseElement)
        1    0.000    0.000    0.000    0.000 ast.py:3(<module>)
        1    0.000    0.000    0.000    0.000 ast.py:3(AST)
        1    0.000    0.000    0.000    0.000 ast.py:306(ASTCase)
        1    0.000    0.000    0.000    0.000 ast.py:323(ASTNew)
        1    0.000    0.000    0.000    0.000 ast.py:338(ASTIsVoid)
        1    0.000    0.000    0.000    0.000 ast.py:351(ASTBinOp)
      412    0.000    0.000    0.000    0.000 ast.py:352(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:367(ASTBoolOp)
      104    0.000    0.000    0.000    0.000 ast.py:368(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:383(ASTNot)
        1    0.000    0.000    0.000    0.000 ast.py:396(ASTNegate)
        1    0.000    0.000    0.000    0.000 ast.py:4(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:409(ASTInteger)
      104    0.000    0.000    0.000    0.000 ast.py:410(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:422(ASTString)
        1    0.000    0.000    0.000    0.000 ast.py:435(ASTBoolean)
       26    0.000    0.000    0.000    0.000 ast.py:436(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:447(ASTIdentifier)
      748    0.001    0.000    0.001    0.000 ast.py:448(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:45(ASTFeature)
        1    0.000    0.000    0.000    0.000 ast.py:46(__init__)
        1    0.000    0.000    0.000    0.000 ast.py:94(ASTFormal)
        1    0.000    0.000    0.000    0.000 ast_gen.py:1(<module>)
      246    0.000    0.000    0.004    0.000 ast_gen.py:148(ast_assign)
       12    0.000    0.000    0.000    0.000 ast_gen.py:192(ast_self_dispatch)
    104/8    0.000    0.000    0.003    0.000 ast_gen.py:204(ast_if)
        1    0.000    0.000    0.007    0.007 ast_gen.py:21(ast)
    209/1    0.001    0.000    0.007    0.007 ast_gen.py:220(ast_block)
      132    0.000    0.000    0.000    0.000 ast_gen.py:228(ast_binding)
        1    0.000    0.000    0.007    0.007 ast_gen.py:247(ast_let)
        1    0.000    0.000    0.007    0.007 ast_gen.py:29(ast_class)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:291(ast_plus)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:299(ast_minus)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:307(ast_times)
    103/1    0.000    0.000    0.001    0.001 ast_gen.py:315(ast_divide)
       34    0.000    0.000    0.000    0.000 ast_gen.py:323(ast_lt)
       32    0.000    0.000    0.000    0.000 ast_gen.py:331(ast_le)
       38    0.000    0.000    0.000    0.000 ast_gen.py:339(ast_eq)
      104    0.000    0.000    0.000    0.000 ast_gen.py:357(ast_integer)
       14    0.000    0.000    0.000    0.000 ast_gen.py:367(ast_true)
       12    0.000    0.000    0.000    0.000 ast_gen.py:371(ast_false)
      748    0.001    0.000    0.001    0.000 ast_gen.py:375(ast_identifier)
        1    0.001    0.001    0.009    0.009 ast_gen.py:4(generate_ast)
        1    0.000    0.000    0.007    0.007 ast_gen.py:51(ast_feature)
   1966/1    0.003    0.000    0.007    0.007 ast_gen.py:87(ast_expression)
        1    0.000    0.000    0.000    0.000 basic_blocks.py:1(<module>)
        1    0.111    0.111    4.240    4.240 basic_blocks.py:118(liveness)
        1    0.000    0.000    0.000    0.000 basic_blocks.py:271(BasicBlock)
      313    0.002    0.000    0.003    0.000 basic_blocks.py:272(__init__)
        1    0.002    0.002    0.005    0.005 basic_blocks.py:5(make_bbs)
     6752    1.263    0.000    4.109    0.001 basic_blocks.py:72(percolate)
   485209    1.598    0.000    1.598    0.000 copy.py:113(_copy_with_constructor)
   485209    0.281    0.000    1.928    0.000 copy.py:66(copy)
        1    0.001    0.001    4.288    4.288 main.py:1(<module>)
        1    0.009    0.009    0.016    0.016 main.py:171(read_input)
        1    0.000    0.000    4.286    4.286 main.py:193(main)
        1    0.000    0.000    0.000    0.000 tacs.py:101(TACNot)
      104    0.000    0.000    0.000    0.000 tacs.py:102(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:11(TACPlus)
        1    0.000    0.000    0.000    0.000 tacs.py:110(TACNeg)
        1    0.000    0.000    0.000    0.000 tacs.py:119(TACNew)
      103    0.000    0.000    0.000    0.000 tacs.py:12(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:128(TACDefault)
      132    0.000    0.000    0.000    0.000 tacs.py:129(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:137(TACIsVoid)
        1    0.000    0.000    0.000    0.000 tacs.py:146(TACOutInt)
       12    0.000    0.000    0.000    0.000 tacs.py:147(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:156(TACOutString)
        1    0.000    0.000    0.000    0.000 tacs.py:166(TACInInt)
        1    0.000    0.000    0.000    0.000 tacs.py:175(TACInString)
        1    0.000    0.000    0.000    0.000 tacs.py:184(TACAbort)
        1    0.000    0.000    0.000    0.000 tacs.py:194(TACJmp)
      208    0.000    0.000    0.000    0.000 tacs.py:195(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:20(TACMinus)
        1    0.000    0.000    0.000    0.000 tacs.py:201(TACLabel)
      313    0.000    0.000    0.000    0.000 tacs.py:202(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:208(TACReturn)
        1    0.000    0.000    0.000    0.000 tacs.py:209(__init__)
      103    0.000    0.000    0.000    0.000 tacs.py:21(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:215(TACBt)
      208    0.000    0.000    0.000    0.000 tacs.py:216(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:223(TACStore)
        1    0.000    0.000    0.000    0.000 tacs.py:230(TACLoad)
        1    0.000    0.000    0.000    0.000 tacs.py:29(TACMultiply)
        1    0.000    0.000    0.000    0.000 tacs.py:3(<module>)
        1    0.000    0.000    0.000    0.000 tacs.py:3(TACAssign)
      103    0.000    0.000    0.000    0.000 tacs.py:30(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:38(TACDivide)
      103    0.000    0.000    0.000    0.000 tacs.py:39(__init__)
     1566    0.001    0.000    0.001    0.000 tacs.py:4(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:48(TACLT)
       34    0.000    0.000    0.000    0.000 tacs.py:49(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:57(TACLEQ)
       32    0.000    0.000    0.000    0.000 tacs.py:58(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:66(TACEqual)
       38    0.000    0.000    0.000    0.000 tacs.py:67(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:76(TACInt)
      104    0.000    0.000    0.000    0.000 tacs.py:77(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:84(TACBool)
       26    0.000    0.000    0.000    0.000 tacs.py:85(__init__)
        1    0.000    0.000    0.000    0.000 tacs.py:92(TACString)
        1    0.000    0.000    0.000    0.000 tacs_gen.py:1(<module>)
      246    0.000    0.000    0.010    0.000 tacs_gen.py:131(tac_assign)
       12    0.000    0.000    0.000    0.000 tacs_gen.py:143(tac_self_dispatch)
      313    0.000    0.000    0.000    0.000 tacs_gen.py:15(nl)
    104/8    0.001    0.000    0.007    0.001 tacs_gen.py:160(tac_if)
     1126    0.001    0.000    0.001    0.000 tacs_gen.py:21(get_symbol)
    209/1    0.000    0.000    0.016    0.016 tacs_gen.py:214(tac_block)
      132    0.000    0.000    0.000    0.000 tacs_gen.py:221(tac_binding)
        1    0.000    0.000    0.016    0.016 tacs_gen.py:231(tac_let)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:260(tac_plus)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:267(tac_minus)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:274(tac_multiply)
    103/1    0.000    0.000    0.002    0.002 tacs_gen.py:281(tac_divide)
       34    0.000    0.000    0.001    0.000 tacs_gen.py:288(tac_lt)
       32    0.000    0.000    0.001    0.000 tacs_gen.py:295(tac_le)
        2    0.000    0.000    0.000    0.000 tacs_gen.py:30(push_table)
       38    0.000    0.000    0.001    0.000 tacs_gen.py:302(tac_eq)
      104    0.000    0.000    0.000    0.000 tacs_gen.py:321(tac_int)
       26    0.000    0.000    0.000    0.000 tacs_gen.py:331(tac_boolean)
      748    0.001    0.000    0.003    0.000 tacs_gen.py:336(tac_identifier)
        2    0.000    0.000    0.000    0.000 tacs_gen.py:34(pop_table)
     3190    0.001    0.000    0.001    0.000 tacs_gen.py:38(tacs_append)
        1    0.000    0.000    0.016    0.016 tacs_gen.py:42(tac_ast)
        1    0.000    0.000    0.016    0.016 tacs_gen.py:47(tac_class)
        1    0.000    0.000    0.016    0.016 tacs_gen.py:54(tac_feature)
   1966/1    0.004    0.000    0.016    0.016 tacs_gen.py:74(tac_expression)
     1957    0.001    0.000    0.001    0.000 tacs_gen.py:9(ns)
  1402903    0.438    0.000    0.438    0.000 {hasattr}
  1931730    0.389    0.000    0.389    0.000 {isinstance}
        1    0.000    0.000    0.000    0.000 {iter}
   518501    0.055    0.000    0.055    0.000 {method 'add' of 'set' objects}
    18058    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'close' of 'file' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
   462223    0.042    0.000    0.042    0.000 {method 'discard' of 'set' objects}
   485209    0.049    0.000    0.049    0.000 {method 'get' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
     6751    0.001    0.000    0.001    0.000 {method 'reverse' of 'list' objects}
    36116    0.005    0.000    0.005    0.000 {method 'rstrip' of 'str' objects}
   133122    0.020    0.000    0.020    0.000 {method 'union' of 'set' objects}
    18058    0.001    0.000    0.001    0.000 {next}
        1    0.000    0.000    0.000    0.000 {open}
      226    0.000    0.000    0.000    0.000 {range}


