8
class
8
type
A
8
lbrace
10
identifier
var
10
colon
10
type
Int
10
larrow
10
integer
0
10
semi
12
identifier
value
12
lparen
12
rparen
12
colon
12
type
Int
12
lbrace
12
identifier
var
12
rbrace
12
semi
14
identifier
set_var
14
lparen
14
identifier
num
14
colon
14
type
Int
14
rparen
14
colon
14
type
SELF_TYPE
14
lbrace
15
lbrace
16
identifier
var
16
larrow
16
identifier
num
16
semi
17
identifier
self
17
semi
18
rbrace
19
rbrace
19
semi
21
identifier
method1
21
lparen
21
identifier
num
21
colon
21
type
Int
21
rparen
21
colon
21
type
SELF_TYPE
21
lbrace
23
identifier
self
24
rbrace
24
semi
26
identifier
method2
26
lparen
26
identifier
num1
26
colon
26
type
Int
26
comma
26
identifier
num2
26
colon
26
type
Int
26
rparen
26
colon
26
type
B
26
lbrace
28
lparen
28
let
28
identifier
x
28
colon
28
type
Int
28
in
29
lbrace
30
identifier
x
30
larrow
30
identifier
num1
30
plus
30
identifier
num2
30
semi
31
lparen
31
new
31
type
B
31
rparen
31
dot
31
identifier
set_var
31
lparen
31
identifier
x
31
rparen
31
semi
32
rbrace
33
rparen
34
rbrace
34
semi
36
identifier
method3
36
lparen
36
identifier
num
36
colon
36
type
Int
36
rparen
36
colon
36
type
C
36
lbrace
38
lparen
38
let
38
identifier
x
38
colon
38
type
Int
38
in
39
lbrace
40
identifier
x
40
larrow
40
tilde
40
identifier
num
40
semi
41
lparen
41
new
41
type
C
41
rparen
41
dot
41
identifier
set_var
41
lparen
41
identifier
x
41
rparen
41
semi
42
rbrace
43
rparen
44
rbrace
44
semi
46
identifier
method4
46
lparen
46
identifier
num1
46
colon
46
type
Int
46
comma
46
identifier
num2
46
colon
46
type
Int
46
rparen
46
colon
46
type
D
46
lbrace
48
if
48
identifier
num2
48
lt
48
identifier
num1
48
then
49
lparen
49
let
49
identifier
x
49
colon
49
type
Int
49
in
50
lbrace
51
identifier
x
51
larrow
51
identifier
num1
51
minus
51
identifier
num2
51
semi
52
lparen
52
new
52
type
D
52
rparen
52
dot
52
identifier
set_var
52
lparen
52
identifier
x
52
rparen
52
semi
53
rbrace
54
rparen
55
else
56
lparen
56
let
56
identifier
x
56
colon
56
type
Int
56
in
57
lbrace
58
identifier
x
58
larrow
58
identifier
num2
58
minus
58
identifier
num1
58
semi
59
lparen
59
new
59
type
D
59
rparen
59
dot
59
identifier
set_var
59
lparen
59
identifier
x
59
rparen
59
semi
60
rbrace
61
rparen
62
fi
63
rbrace
63
semi
65
identifier
method5
65
lparen
65
identifier
num
65
colon
65
type
Int
65
rparen
65
colon
65
type
E
65
lbrace
67
lparen
67
let
67
identifier
x
67
colon
67
type
Int
67
larrow
67
integer
1
67
in
68
lbrace
69
lparen
69
let
69
identifier
y
69
colon
69
type
Int
69
larrow
69
integer
1
69
in
70
while
70
identifier
y
70
le
70
identifier
num
70
loop
71
lbrace
72
identifier
x
72
larrow
72
identifier
x
72
times
72
identifier
y
72
semi
73
identifier
y
73
larrow
73
identifier
y
73
plus
73
integer
1
73
semi
74
rbrace
75
pool
76
rparen
76
semi
77
lparen
77
new
77
type
E
77
rparen
77
dot
77
identifier
set_var
77
lparen
77
identifier
x
77
rparen
77
semi
78
rbrace
79
rparen
80
rbrace
80
semi
82
rbrace
82
semi
84
class
84
type
B
84
inherits
84
type
A
84
lbrace
87
identifier
method5
87
lparen
87
identifier
num
87
colon
87
type
Int
87
rparen
87
colon
87
type
E
87
lbrace
89
lparen
89
let
89
identifier
x
89
colon
89
type
Int
89
in
90
lbrace
91
identifier
x
91
larrow
91
identifier
num
91
times
91
identifier
num
91
semi
92
lparen
92
new
92
type
E
92
rparen
92
dot
92
identifier
set_var
92
lparen
92
identifier
x
92
rparen
92
semi
93
rbrace
94
rparen
95
rbrace
95
semi
97
rbrace
97
semi
99
class
99
type
C
99
inherits
99
type
B
99
lbrace
101
identifier
method6
101
lparen
101
identifier
num
101
colon
101
type
Int
101
rparen
101
colon
101
type
A
101
lbrace
103
lparen
103
let
103
identifier
x
103
colon
103
type
Int
103
in
104
lbrace
105
identifier
x
105
larrow
105
tilde
105
identifier
num
105
semi
106
lparen
106
new
106
type
A
106
rparen
106
dot
106
identifier
set_var
106
lparen
106
identifier
x
106
rparen
106
semi
107
rbrace
108
rparen
109
rbrace
109
semi
111
identifier
method5
111
lparen
111
identifier
num
111
colon
111
type
Int
111
rparen
111
colon
111
type
E
111
lbrace
113
lparen
113
let
113
identifier
x
113
colon
113
type
Int
113
in
114
lbrace
115
identifier
x
115
larrow
115
identifier
num
115
times
115
identifier
num
115
times
115
identifier
num
115
semi
116
lparen
116
new
116
type
E
116
rparen
116
dot
116
identifier
set_var
116
lparen
116
identifier
x
116
rparen
116
semi
117
rbrace
118
rparen
119
rbrace
119
semi
121
rbrace
121
semi
123
class
123
type
D
123
inherits
123
type
B
123
lbrace
125
identifier
method7
125
lparen
125
identifier
num
125
colon
125
type
Int
125
rparen
125
colon
125
type
Bool
125
lbrace
127
lparen
127
let
127
identifier
x
127
colon
127
type
Int
127
larrow
127
identifier
num
127
in
128
if
128
identifier
x
128
lt
128
integer
0
128
then
128
identifier
method7
128
lparen
128
tilde
128
identifier
x
128
rparen
128
else
129
if
129
integer
0
129
equals
129
identifier
x
129
then
129
true
129
else
130
if
130
integer
1
130
equals
130
identifier
x
130
then
130
false
130
else
131
if
131
integer
2
131
equals
131
identifier
x
131
then
131
false
131
else
132
identifier
method7
132
lparen
132
identifier
x
132
minus
132
integer
3
132
rparen
133
fi
133
fi
133
fi
133
fi
134
rparen
135
rbrace
135
semi
137
rbrace
137
semi
139
class
139
type
E
139
inherits
139
type
D
139
lbrace
141
identifier
method6
141
lparen
141
identifier
num
141
colon
141
type
Int
141
rparen
141
colon
141
type
A
141
lbrace
143
lparen
143
let
143
identifier
x
143
colon
143
type
Int
143
in
144
lbrace
145
identifier
x
145
larrow
145
identifier
num
145
divide
145
integer
8
145
semi
146
lparen
146
new
146
type
A
146
rparen
146
dot
146
identifier
set_var
146
lparen
146
identifier
x
146
rparen
146
semi
147
rbrace
148
rparen
149
rbrace
149
semi
151
rbrace
151
semi
167
class
167
type
A2I
167
lbrace
169
identifier
c2i
169
lparen
169
identifier
char
169
colon
169
type
String
169
rparen
169
colon
169
type
Int
169
lbrace
170
if
170
identifier
char
170
equals
170
string
0
170
then
170
integer
0
170
else
171
if
171
identifier
char
171
equals
171
string
1
171
then
171
integer
1
171
else
172
if
172
identifier
char
172
equals
172
string
2
172
then
172
integer
2
172
else
173
if
173
identifier
char
173
equals
173
string
3
173
then
173
integer
3
173
else
174
if
174
identifier
char
174
equals
174
string
4
174
then
174
integer
4
174
else
175
if
175
identifier
char
175
equals
175
string
5
175
then
175
integer
5
175
else
176
if
176
identifier
char
176
equals
176
string
6
176
then
176
integer
6
176
else
177
if
177
identifier
char
177
equals
177
string
7
177
then
177
integer
7
177
else
178
if
178
identifier
char
178
equals
178
string
8
178
then
178
integer
8
178
else
179
if
179
identifier
char
179
equals
179
string
9
179
then
179
integer
9
179
else
180
lbrace
180
identifier
abort
180
lparen
180
rparen
180
semi
180
integer
0
180
semi
180
rbrace
182
fi
182
fi
182
fi
182
fi
182
fi
182
fi
182
fi
182
fi
182
fi
182
fi
183
rbrace
183
semi
188
identifier
i2c
188
lparen
188
identifier
i
188
colon
188
type
Int
188
rparen
188
colon
188
type
String
188
lbrace
189
if
189
identifier
i
189
equals
189
integer
0
189
then
189
string
0
189
else
190
if
190
identifier
i
190
equals
190
integer
1
190
then
190
string
1
190
else
191
if
191
identifier
i
191
equals
191
integer
2
191
then
191
string
2
191
else
192
if
192
identifier
i
192
equals
192
integer
3
192
then
192
string
3
192
else
193
if
193
identifier
i
193
equals
193
integer
4
193
then
193
string
4
193
else
194
if
194
identifier
i
194
equals
194
integer
5
194
then
194
string
5
194
else
195
if
195
identifier
i
195
equals
195
integer
6
195
then
195
string
6
195
else
196
if
196
identifier
i
196
equals
196
integer
7
196
then
196
string
7
196
else
197
if
197
identifier
i
197
equals
197
integer
8
197
then
197
string
8
197
else
198
if
198
identifier
i
198
equals
198
integer
9
198
then
198
string
9
198
else
199
lbrace
199
identifier
abort
199
lparen
199
rparen
199
semi
199
string

199
semi
199
rbrace
201
fi
201
fi
201
fi
201
fi
201
fi
201
fi
201
fi
201
fi
201
fi
201
fi
202
rbrace
202
semi
212
identifier
a2i
212
lparen
212
identifier
s
212
colon
212
type
String
212
rparen
212
colon
212
type
Int
212
lbrace
213
if
213
identifier
s
213
dot
213
identifier
length
213
lparen
213
rparen
213
equals
213
integer
0
213
then
213
integer
0
213
else
214
if
214
identifier
s
214
dot
214
identifier
substr
214
lparen
214
integer
0
214
comma
214
integer
1
214
rparen
214
equals
214
string
-
214
then
214
tilde
214
identifier
a2i_aux
214
lparen
214
identifier
s
214
dot
214
identifier
substr
214
lparen
214
integer
1
214
comma
214
identifier
s
214
dot
214
identifier
length
214
lparen
214
rparen
214
minus
214
integer
1
214
rparen
214
rparen
214
else
215
if
215
identifier
s
215
dot
215
identifier
substr
215
lparen
215
integer
0
215
comma
215
integer
1
215
rparen
215
equals
215
string
+
215
then
215
identifier
a2i_aux
215
lparen
215
identifier
s
215
dot
215
identifier
substr
215
lparen
215
integer
1
215
comma
215
identifier
s
215
dot
215
identifier
length
215
lparen
215
rparen
215
minus
215
integer
1
215
rparen
215
rparen
215
else
216
identifier
a2i_aux
216
lparen
216
identifier
s
216
rparen
217
fi
217
fi
217
fi
218
rbrace
218
semi
224
identifier
a2i_aux
224
lparen
224
identifier
s
224
colon
224
type
String
224
rparen
224
colon
224
type
Int
224
lbrace
225
lparen
225
let
225
identifier
int
225
colon
225
type
Int
225
larrow
225
integer
0
225
in
226
lbrace
227
lparen
227
let
227
identifier
j
227
colon
227
type
Int
227
larrow
227
identifier
s
227
dot
227
identifier
length
227
lparen
227
rparen
227
in
228
lparen
228
let
228
identifier
i
228
colon
228
type
Int
228
larrow
228
integer
0
228
in
229
while
229
identifier
i
229
lt
229
identifier
j
229
loop
230
lbrace
231
identifier
int
231
larrow
231
identifier
int
231
times
231
integer
10
231
plus
231
identifier
c2i
231
lparen
231
identifier
s
231
dot
231
identifier
substr
231
lparen
231
identifier
i
231
comma
231
integer
1
231
rparen
231
rparen
231
semi
232
identifier
i
232
larrow
232
identifier
i
232
plus
232
integer
1
232
semi
233
rbrace
234
pool
235
rparen
236
rparen
236
semi
237
identifier
int
237
semi
238
rbrace
239
rparen
240
rbrace
240
semi
245
identifier
i2a
245
lparen
245
identifier
i
245
colon
245
type
Int
245
rparen
245
colon
245
type
String
245
lbrace
246
if
246
identifier
i
246
equals
246
integer
0
246
then
246
string
0
246
else
247
if
247
integer
0
247
lt
247
identifier
i
247
then
247
identifier
i2a_aux
247
lparen
247
identifier
i
247
rparen
247
else
248
string
-
248
dot
248
identifier
concat
248
lparen
248
identifier
i2a_aux
248
lparen
248
identifier
i
248
times
248
tilde
248
integer
1
248
rparen
248
rparen
249
fi
249
fi
250
rbrace
250
semi
254
identifier
i2a_aux
254
lparen
254
identifier
i
254
colon
254
type
Int
254
rparen
254
colon
254
type
String
254
lbrace
255
if
255
identifier
i
255
equals
255
integer
0
255
then
255
string

255
else
256
lparen
256
let
256
identifier
next
256
colon
256
type
Int
256
larrow
256
identifier
i
256
divide
256
integer
10
256
in
257
identifier
i2a_aux
257
lparen
257
identifier
next
257
rparen
257
dot
257
identifier
concat
257
lparen
257
identifier
i2c
257
lparen
257
identifier
i
257
minus
257
identifier
next
257
times
257
integer
10
257
rparen
257
rparen
258
rparen
259
fi
260
rbrace
260
semi
262
rbrace
262
semi
264
class
264
type
Main
264
inherits
264
type
IO
264
lbrace
266
identifier
char
266
colon
266
type
String
266
semi
267
identifier
avar
267
colon
267
type
A
267
semi
268
identifier
a_var
268
colon
268
type
A
268
semi
269
identifier
flag
269
colon
269
type
Bool
269
larrow
269
true
269
semi
272
identifier
menu
272
lparen
272
rparen
272
colon
272
type
String
272
lbrace
273
lbrace
274
identifier
out_string
274
lparen
274
string
\n\tTo add a number to 
274
rparen
274
semi
275
identifier
print
275
lparen
275
identifier
avar
275
rparen
275
semi
276
identifier
out_string
276
lparen
276
string
...enter a:\n
276
rparen
276
semi
277
identifier
out_string
277
lparen
277
string
\tTo negate 
277
rparen
277
semi
278
identifier
print
278
lparen
278
identifier
avar
278
rparen
278
semi
279
identifier
out_string
279
lparen
279
string
...enter b:\n
279
rparen
279
semi
280
identifier
out_string
280
lparen
280
string
\tTo find the difference between 
280
rparen
280
semi
281
identifier
print
281
lparen
281
identifier
avar
281
rparen
281
semi
282
identifier
out_string
282
lparen
282
string
and another number...enter c:\n
282
rparen
282
semi
283
identifier
out_string
283
lparen
283
string
\tTo find the factorial of 
283
rparen
283
semi
284
identifier
print
284
lparen
284
identifier
avar
284
rparen
284
semi
285
identifier
out_string
285
lparen
285
string
...enter d:\n
285
rparen
285
semi
286
identifier
out_string
286
lparen
286
string
\tTo square 
286
rparen
286
semi
287
identifier
print
287
lparen
287
identifier
avar
287
rparen
287
semi
288
identifier
out_string
288
lparen
288
string
...enter e:\n
288
rparen
288
semi
289
identifier
out_string
289
lparen
289
string
\tTo cube 
289
rparen
289
semi
290
identifier
print
290
lparen
290
identifier
avar
290
rparen
290
semi
291
identifier
out_string
291
lparen
291
string
...enter f:\n
291
rparen
291
semi
292
identifier
out_string
292
lparen
292
string
\tTo find out if 
292
rparen
292
semi
293
identifier
print
293
lparen
293
identifier
avar
293
rparen
293
semi
294
identifier
out_string
294
lparen
294
string
is a multiple of 3...enter g:\n
294
rparen
294
semi
295
identifier
out_string
295
lparen
295
string
\tTo divide 
295
rparen
295
semi
296
identifier
print
296
lparen
296
identifier
avar
296
rparen
296
semi
297
identifier
out_string
297
lparen
297
string
by 8...enter h:\n
297
rparen
297
semi
298
identifier
out_string
298
lparen
298
string
\tTo get a new number...enter j:\n
298
rparen
298
semi
299
identifier
out_string
299
lparen
299
string
\tTo quit...enter q:\n\n
299
rparen
299
semi
300
identifier
in_string
300
lparen
300
rparen
300
semi
301
rbrace
302
rbrace
302
semi
304
identifier
prompt
304
lparen
304
rparen
304
colon
304
type
String
304
lbrace
305
lbrace
306
identifier
out_string
306
lparen
306
string
\n
306
rparen
306
semi
307
identifier
out_string
307
lparen
307
string
Please enter a number...  
307
rparen
307
semi
308
identifier
in_string
308
lparen
308
rparen
308
semi
309
rbrace
310
rbrace
310
semi
312
identifier
get_int
312
lparen
312
rparen
312
colon
312
type
Int
312
lbrace
313
lbrace
314
lparen
314
let
314
identifier
z
314
colon
314
type
A2I
314
larrow
314
new
314
type
A2I
314
in
315
lparen
315
let
315
identifier
s
315
colon
315
type
String
315
larrow
315
identifier
prompt
315
lparen
315
rparen
315
in
316
identifier
z
316
dot
316
identifier
a2i
316
lparen
316
identifier
s
316
rparen
317
rparen
318
rparen
318
semi
319
rbrace
320
rbrace
320
semi
322
identifier
is_even
322
lparen
322
identifier
num
322
colon
322
type
Int
322
rparen
322
colon
322
type
Bool
322
lbrace
323
lparen
323
let
323
identifier
x
323
colon
323
type
Int
323
larrow
323
identifier
num
323
in
324
if
324
identifier
x
324
lt
324
integer
0
324
then
324
identifier
is_even
324
lparen
324
tilde
324
identifier
x
324
rparen
324
else
325
if
325
integer
0
325
equals
325
identifier
x
325
then
325
true
325
else
326
if
326
integer
1
326
equals
326
identifier
x
326
then
326
false
326
else
327
identifier
is_even
327
lparen
327
identifier
x
327
minus
327
integer
2
327
rparen
328
fi
328
fi
328
fi
329
rparen
330
rbrace
330
semi
332
identifier
class_type
332
lparen
332
identifier
var
332
colon
332
type
A
332
rparen
332
colon
332
type
SELF_TYPE
332
lbrace
333
case
333
identifier
var
333
of
334
identifier
a
334
colon
334
type
A
334
rarrow
334
identifier
out_string
334
lparen
334
string
Class type is now A\n
334
rparen
334
semi
335
identifier
b
335
colon
335
type
B
335
rarrow
335
identifier
out_string
335
lparen
335
string
Class type is now B\n
335
rparen
335
semi
336
identifier
c
336
colon
336
type
C
336
rarrow
336
identifier
out_string
336
lparen
336
string
Class type is now C\n
336
rparen
336
semi
337
identifier
d
337
colon
337
type
D
337
rarrow
337
identifier
out_string
337
lparen
337
string
Class type is now D\n
337
rparen
337
semi
338
identifier
e
338
colon
338
type
E
338
rarrow
338
identifier
out_string
338
lparen
338
string
Class type is now E\n
338
rparen
338
semi
339
identifier
o
339
colon
339
type
Object
339
rarrow
339
identifier
out_string
339
lparen
339
string
Oooops\n
339
rparen
339
semi
340
esac
341
rbrace
341
semi
343
identifier
print
343
lparen
343
identifier
var
343
colon
343
type
A
343
rparen
343
colon
343
type
SELF_TYPE
343
lbrace
344
lparen
344
let
344
identifier
z
344
colon
344
type
A2I
344
larrow
344
new
344
type
A2I
344
in
345
lbrace
346
identifier
out_string
346
lparen
346
identifier
z
346
dot
346
identifier
i2a
346
lparen
346
identifier
var
346
dot
346
identifier
value
346
lparen
346
rparen
346
rparen
346
rparen
346
semi
347
identifier
out_string
347
lparen
347
string
 
347
rparen
347
semi
348
rbrace
349
rparen
350
rbrace
350
semi
352
identifier
main
352
lparen
352
rparen
352
colon
352
type
Object
352
lbrace
353
lbrace
354
identifier
avar
354
larrow
354
lparen
354
new
354
type
A
354
rparen
354
semi
355
while
355
identifier
flag
355
loop
356
lbrace
359
identifier
out_string
359
lparen
359
string
number 
359
rparen
359
semi
360
identifier
print
360
lparen
360
identifier
avar
360
rparen
360
semi
361
if
361
identifier
is_even
361
lparen
361
identifier
avar
361
dot
361
identifier
value
361
lparen
361
rparen
361
rparen
361
then
362
identifier
out_string
362
lparen
362
string
is even!\n
362
rparen
363
else
364
identifier
out_string
364
lparen
364
string
is odd!\n
364
rparen
365
fi
365
semi
368
identifier
class_type
368
lparen
368
identifier
avar
368
rparen
368
semi
369
identifier
char
369
larrow
369
identifier
menu
369
lparen
369
rparen
369
semi
370
if
370
identifier
char
370
equals
370
string
a
370
then
372
lbrace
373
identifier
a_var
373
larrow
373
lparen
373
new
373
type
A
373
rparen
373
dot
373
identifier
set_var
373
lparen
373
identifier
get_int
373
lparen
373
rparen
373
rparen
373
semi
374
identifier
avar
374
larrow
374
lparen
374
new
374
type
B
374
rparen
374
dot
374
identifier
method2
374
lparen
374
identifier
avar
374
dot
374
identifier
value
374
lparen
374
rparen
374
comma
374
identifier
a_var
374
dot
374
identifier
value
374
lparen
374
rparen
374
rparen
374
semi
375
rbrace
375
else
376
if
376
identifier
char
376
equals
376
string
b
376
then
378
case
378
identifier
avar
378
of
379
identifier
c
379
colon
379
type
C
379
rarrow
379
identifier
avar
379
larrow
379
identifier
c
379
dot
379
identifier
method6
379
lparen
379
identifier
c
379
dot
379
identifier
value
379
lparen
379
rparen
379
rparen
379
semi
380
identifier
a
380
colon
380
type
A
380
rarrow
380
identifier
avar
380
larrow
380
identifier
a
380
dot
380
identifier
method3
380
lparen
380
identifier
a
380
dot
380
identifier
value
380
lparen
380
rparen
380
rparen
380
semi
381
identifier
o
381
colon
381
type
Object
381
rarrow
381
lbrace
382
identifier
out_string
382
lparen
382
string
Oooops\n
382
rparen
382
semi
383
identifier
abort
383
lparen
383
rparen
383
semi
383
integer
0
383
semi
384
rbrace
384
semi
385
esac
385
else
386
if
386
identifier
char
386
equals
386
string
c
386
then
388
lbrace
389
identifier
a_var
389
larrow
389
lparen
389
new
389
type
A
389
rparen
389
dot
389
identifier
set_var
389
lparen
389
identifier
get_int
389
lparen
389
rparen
389
rparen
389
semi
390
identifier
avar
390
larrow
390
lparen
390
new
390
type
D
390
rparen
390
dot
390
identifier
method4
390
lparen
390
identifier
avar
390
dot
390
identifier
value
390
lparen
390
rparen
390
comma
390
identifier
a_var
390
dot
390
identifier
value
390
lparen
390
rparen
390
rparen
390
semi
391
rbrace
391
else
392
if
392
identifier
char
392
equals
392
string
d
392
then
392
identifier
avar
392
larrow
392
lparen
392
new
392
type
C
392
rparen
392
at
392
type
A
392
dot
392
identifier
method5
392
lparen
392
identifier
avar
392
dot
392
identifier
value
392
lparen
392
rparen
392
rparen
392
else
395
if
395
identifier
char
395
equals
395
string
e
395
then
395
identifier
avar
395
larrow
395
lparen
395
new
395
type
C
395
rparen
395
at
395
type
B
395
dot
395
identifier
method5
395
lparen
395
identifier
avar
395
dot
395
identifier
value
395
lparen
395
rparen
395
rparen
395
else
398
if
398
identifier
char
398
equals
398
string
f
398
then
398
identifier
avar
398
larrow
398
lparen
398
new
398
type
C
398
rparen
398
at
398
type
C
398
dot
398
identifier
method5
398
lparen
398
identifier
avar
398
dot
398
identifier
value
398
lparen
398
rparen
398
rparen
398
else
401
if
401
identifier
char
401
equals
401
string
g
401
then
403
if
403
lparen
403
lparen
403
new
403
type
D
403
rparen
403
dot
403
identifier
method7
403
lparen
403
identifier
avar
403
dot
403
identifier
value
403
lparen
403
rparen
403
rparen
403
rparen
404
then
406
lbrace
407
identifier
out_string
407
lparen
407
string
number 
407
rparen
407
semi
408
identifier
print
408
lparen
408
identifier
avar
408
rparen
408
semi
409
identifier
out_string
409
lparen
409
string
is divisible by 3.\n
409
rparen
409
semi
410
rbrace
411
else
413
lbrace
414
identifier
out_string
414
lparen
414
string
number 
414
rparen
414
semi
415
identifier
print
415
lparen
415
identifier
avar
415
rparen
415
semi
416
identifier
out_string
416
lparen
416
string
is not divisible by 3.\n
416
rparen
416
semi
417
rbrace
418
fi
418
else
419
if
419
identifier
char
419
equals
419
string
h
419
then
420
lparen
420
let
420
identifier
x
420
colon
420
type
A
420
in
421
lbrace
422
identifier
x
422
larrow
422
lparen
422
new
422
type
E
422
rparen
422
dot
422
identifier
method6
422
lparen
422
identifier
avar
422
dot
422
identifier
value
422
lparen
422
rparen
422
rparen
422
semi
423
lparen
423
let
423
identifier
r
423
colon
423
type
Int
423
larrow
423
lparen
423
identifier
avar
423
dot
423
identifier
value
423
lparen
423
rparen
423
minus
423
lparen
423
identifier
x
423
dot
423
identifier
value
423
lparen
423
rparen
423
times
423
integer
8
423
rparen
423
rparen
423
in
424
lbrace
425
identifier
out_string
425
lparen
425
string
number 
425
rparen
425
semi
426
identifier
print
426
lparen
426
identifier
avar
426
rparen
426
semi
427
identifier
out_string
427
lparen
427
string
is equal to 
427
rparen
427
semi
428
identifier
print
428
lparen
428
identifier
x
428
rparen
428
semi
429
identifier
out_string
429
lparen
429
string
times 8 with a remainder of 
429
rparen
429
semi
430
lparen
430
let
430
identifier
a
430
colon
430
type
A2I
430
larrow
430
new
430
type
A2I
430
in
431
lbrace
432
identifier
out_string
432
lparen
432
identifier
a
432
dot
432
identifier
i2a
432
lparen
432
identifier
r
432
rparen
432
rparen
432
semi
433
identifier
out_string
433
lparen
433
string
\n
433
rparen
433
semi
434
rbrace
435
rparen
435
semi
437
rbrace
438
rparen
438
semi
440
identifier
avar
440
larrow
440
identifier
x
440
semi
441
rbrace
442
rparen
444
else
445
if
445
identifier
char
445
equals
445
string
j
445
then
445
identifier
avar
445
larrow
445
lparen
445
new
445
type
A
445
rparen
446
else
447
if
447
identifier
char
447
equals
447
string
q
447
then
447
identifier
flag
447
larrow
447
false
448
else
449
identifier
avar
449
larrow
449
lparen
449
new
449
type
A
449
rparen
449
dot
449
identifier
method1
449
lparen
449
identifier
avar
449
dot
449
identifier
value
449
lparen
449
rparen
449
rparen
451
fi
451
fi
451
fi
451
fi
451
fi
451
fi
451
fi
451
fi
451
fi
451
fi
451
semi
452
rbrace
453
pool
453
semi
454
rbrace
455
rbrace
455
semi
457
rbrace
457
semi
