7
7
A
no_inherits
8
attribute_init
9
var
9
Int
9
integer
0
method
11
value
0
11
Int
11
identifier
11
var
method
13
set_var
1
13
num
13
Int
13
SELF_TYPE
14
block
2
15
assign
15
var
15
identifier
15
num
16
identifier
16
self
method
20
method1
1
20
num
20
Int
20
SELF_TYPE
21
identifier
21
self
method
24
method2
2
24
num1
24
Int
24
num2
24
Int
24
B
25
let
0
method
33
method3
1
33
num
33
Int
33
C
34
let
0
method
42
method4
2
42
num1
42
Int
42
num2
42
Int
42
D
43
if
0
lt
43
identifier
43
num2
43
identifier
43
num1
44
let
0
51
let
0
method
60
method5
1
60
num
60
Int
60
E
61
let
0
78
B
inherits
78
A
1
method
80
method5
1
80
num
80
Int
80
E
81
let
0
91
C
inherits
91
B
2
method
93
method6
1
93
num
93
Int
93
A
94
let
0
method
102
method5
1
102
num
102
Int
102
E
103
let
0
113
D
inherits
113
B
1
method
115
method7
1
115
num
115
Int
115
Bool
116
let
0
128
E
inherits
128
D
1
method
130
method6
1
130
num
130
Int
130
A
131
let
0
155
A2I
no_inherits
6
method
157
c2i
1
157
char
157
String
157
Int
158
if
0
eq
158
identifier
158
char
158
string
0
158
integer
0
159
if
0
eq
159
identifier
159
char
159
string
1
159
integer
1
160
if
0
eq
160
identifier
160
char
160
string
2
160
integer
2
161
if
0
eq
161
identifier
161
char
161
string
3
161
integer
3
162
if
0
eq
162
identifier
162
char
162
string
4
162
integer
4
163
if
0
eq
163
identifier
163
char
163
string
5
163
integer
5
164
if
0
eq
164
identifier
164
char
164
string
6
164
integer
6
165
if
0
eq
165
identifier
165
char
165
string
7
165
integer
7
166
if
0
eq
166
identifier
166
char
166
string
8
166
integer
8
167
if
0
eq
167
identifier
167
char
167
string
9
167
integer
9
168
block
2
168
self_dispatch
168
abort
0
168
integer
0
method
176
i2c
1
176
i
176
Int
176
String
177
if
0
eq
177
identifier
177
i
177
integer
0
177
string
0
178
if
0
eq
178
identifier
178
i
178
integer
1
178
string
1
179
if
0
eq
179
identifier
179
i
179
integer
2
179
string
2
180
if
0
eq
180
identifier
180
i
180
integer
3
180
string
3
181
if
0
eq
181
identifier
181
i
181
integer
4
181
string
4
182
if
0
eq
182
identifier
182
i
182
integer
5
182
string
5
183
if
0
eq
183
identifier
183
i
183
integer
6
183
string
6
184
if
0
eq
184
identifier
184
i
184
integer
7
184
string
7
185
if
0
eq
185
identifier
185
i
185
integer
8
185
string
8
186
if
0
eq
186
identifier
186
i
186
integer
9
186
string
9
187
block
2
187
self_dispatch
187
abort
0
187
string

method
199
a2i
1
199
s
199
String
199
Int
200
if
0
eq
0
dynamic_dispatch
200
identifier
200
s
200
length
0
200
integer
0
200
integer
0
201
if
0
eq
0
dynamic_dispatch
201
identifier
201
s
201
substr
2
201
integer
0
201
integer
1
201
string
-
201
negate
201
self_dispatch
201
a2i_aux
1
0
dynamic_dispatch
201
identifier
201
s
201
substr
2
201
integer
1
0
minus
0
dynamic_dispatch
201
identifier
201
s
201
length
0
201
integer
1
202
if
0
eq
0
dynamic_dispatch
202
identifier
202
s
202
substr
2
202
integer
0
202
integer
1
202
string
+
202
self_dispatch
202
a2i_aux
1
0
dynamic_dispatch
202
identifier
202
s
202
substr
2
202
integer
1
0
minus
0
dynamic_dispatch
202
identifier
202
s
202
length
0
202
integer
1
203
self_dispatch
203
a2i_aux
1
203
identifier
203
s
method
211
a2i_aux
1
211
s
211
String
211
Int
212
let
0
method
232
i2a
1
232
i
232
Int
232
String
233
if
0
eq
233
identifier
233
i
233
integer
0
233
string
0
234
if
0
lt
234
integer
0
234
identifier
234
i
234
self_dispatch
234
i2a_aux
1
234
identifier
234
i
0
dynamic_dispatch
235
string
-
235
concat
1
235
self_dispatch
235
i2a_aux
1
0
times
235
identifier
235
i
235
negate
235
integer
1
method
241
i2a_aux
1
241
i
241
Int
241
String
242
if
0
eq
242
identifier
242
i
242
integer
0
242
string

243
let
0
251
Main
inherits
251
IO
11
attribute_no_init
253
char
253
String
attribute_no_init
254
avar
254
A
attribute_no_init
255
a_var
255
A
attribute_init
256
flag
256
Bool
256
true
method
259
menu
0
259
String
260
block
27
261
self_dispatch
261
out_string
1
261
string
\n\tTo add a number to 
262
self_dispatch
262
print
1
262
identifier
262
avar
263
self_dispatch
263
out_string
1
263
string
...enter a:\n
264
self_dispatch
264
out_string
1
264
string
\tTo negate 
265
self_dispatch
265
print
1
265
identifier
265
avar
266
self_dispatch
266
out_string
1
266
string
...enter b:\n
267
self_dispatch
267
out_string
1
267
string
\tTo find the difference between 
268
self_dispatch
268
print
1
268
identifier
268
avar
269
self_dispatch
269
out_string
1
269
string
and another number...enter c:\n
270
self_dispatch
270
out_string
1
270
string
\tTo find the factorial of 
271
self_dispatch
271
print
1
271
identifier
271
avar
272
self_dispatch
272
out_string
1
272
string
...enter d:\n
273
self_dispatch
273
out_string
1
273
string
\tTo square 
274
self_dispatch
274
print
1
274
identifier
274
avar
275
self_dispatch
275
out_string
1
275
string
...enter e:\n
276
self_dispatch
276
out_string
1
276
string
\tTo cube 
277
self_dispatch
277
print
1
277
identifier
277
avar
278
self_dispatch
278
out_string
1
278
string
...enter f:\n
279
self_dispatch
279
out_string
1
279
string
\tTo find out if 
280
self_dispatch
280
print
1
280
identifier
280
avar
281
self_dispatch
281
out_string
1
281
string
is a multiple of 3...enter g:\n
282
self_dispatch
282
out_string
1
282
string
\tTo divide 
283
self_dispatch
283
print
1
283
identifier
283
avar
284
self_dispatch
284
out_string
1
284
string
by 8...enter h:\n
285
self_dispatch
285
out_string
1
285
string
\tTo get a new number...enter j:\n
286
self_dispatch
286
out_string
1
286
string
\tTo quit...enter q:\n\n
287
self_dispatch
287
in_string
0
method
291
prompt
0
291
String
292
block
3
293
self_dispatch
293
out_string
1
293
string
\n
294
self_dispatch
294
out_string
1
294
string
Please enter a number...  
295
self_dispatch
295
in_string
0
method
299
get_int
0
299
Int
300
block
1
301
let
0
method
309
is_even
1
309
num
309
Int
309
Bool
310
let
0
method
319
class_type
1
319
var
319
A
319
SELF_TYPE
320
case
320
identifier
320
var
6
321
a
321
A
321
self_dispatch
321
out_string
1
321
string
Class type is now A\n
322
b
322
B
322
self_dispatch
322
out_string
1
322
string
Class type is now B\n
323
c
323
C
323
self_dispatch
323
out_string
1
323
string
Class type is now C\n
324
d
324
D
324
self_dispatch
324
out_string
1
324
string
Class type is now D\n
325
e
325
E
325
self_dispatch
325
out_string
1
325
string
Class type is now E\n
326
o
326
Object
326
self_dispatch
326
out_string
1
326
string
Oooops\n
method
330
print
1
330
var
330
A
330
SELF_TYPE
331
let
0
method
339
main
0
339
Object
340
block
2
341
assign
341
avar
341
new
341
A
342
while
342
identifier
342
flag
343
block
6
345
self_dispatch
345
out_string
1
345
string
number 
346
self_dispatch
346
print
1
346
identifier
346
avar
347
if
347
self_dispatch
347
is_even
1
0
dynamic_dispatch
347
identifier
347
avar
347
value
0
348
self_dispatch
348
out_string
1
348
string
is even!\n
350
self_dispatch
350
out_string
1
350
string
is odd!\n
353
self_dispatch
353
class_type
1
353
identifier
353
avar
354
assign
354
char
354
self_dispatch
354
menu
0
355
if
0
eq
355
identifier
355
char
355
string
a
356
block
2
0
dynamic_dispatch
357
assign
357
a_var
357
new
357
A
357
set_var
1
357
self_dispatch
357
get_int
0
0
dynamic_dispatch
358
assign
358
avar
358
new
358
B
358
method2
2
0
dynamic_dispatch
358
identifier
358
avar
358
value
0
0
dynamic_dispatch
358
identifier
358
a_var
358
value
0
360
if
0
eq
360
identifier
360
char
360
string
b
361
case
361
identifier
361
avar
3
362
c
362
C
0
dynamic_dispatch
362
assign
362
avar
362
identifier
362
c
362
method6
1
0
dynamic_dispatch
362
identifier
362
c
362
value
0
363
a
363
A
0
dynamic_dispatch
363
assign
363
avar
363
identifier
363
a
363
method3
1
0
dynamic_dispatch
363
identifier
363
a
363
value
0
364
o
364
Object
364
block
3
365
self_dispatch
365
out_string
1
365
string
Oooops\n
366
self_dispatch
366
abort
0
366
integer
0
369
if
0
eq
369
identifier
369
char
369
string
c
370
block
2
0
dynamic_dispatch
371
assign
371
a_var
371
new
371
A
371
set_var
1
371
self_dispatch
371
get_int
0
0
dynamic_dispatch
372
assign
372
avar
372
new
372
D
372
method4
2
0
dynamic_dispatch
372
identifier
372
avar
372
value
0
0
dynamic_dispatch
372
identifier
372
a_var
372
value
0
374
if
0
eq
374
identifier
374
char
374
string
d
0
static_dispatch
374
assign
374
avar
374
new
374
C
374
A
374
method5
1
0
dynamic_dispatch
374
identifier
374
avar
374
value
0
376
if
0
eq
376
identifier
376
char
376
string
e
0
static_dispatch
376
assign
376
avar
376
new
376
C
376
B
376
method5
1
0
dynamic_dispatch
376
identifier
376
avar
376
value
0
378
if
0
eq
378
identifier
378
char
378
string
f
0
static_dispatch
378
assign
378
avar
378
new
378
C
378
C
378
method5
1
0
dynamic_dispatch
378
identifier
378
avar
378
value
0
380
if
0
eq
380
identifier
380
char
380
string
g
381
if
0
dynamic_dispatch
381
new
381
D
381
method7
1
0
dynamic_dispatch
381
identifier
381
avar
381
value
0
383
block
3
384
self_dispatch
384
out_string
1
384
string
number 
385
self_dispatch
385
print
1
385
identifier
385
avar
386
self_dispatch
386
out_string
1
386
string
is divisible by 3.\n
389
block
3
390
self_dispatch
390
out_string
1
390
string
number 
391
self_dispatch
391
print
1
391
identifier
391
avar
392
self_dispatch
392
out_string
1
392
string
is not divisible by 3.\n
395
if
0
eq
395
identifier
395
char
395
string
h
396
let
0
418
if
0
eq
418
identifier
418
char
418
string
j
418
assign
418
avar
418
new
418
A
420
if
0
eq
420
identifier
420
char
420
string
q
420
assign
420
flag
420
false
0
dynamic_dispatch
422
assign
422
avar
422
new
422
A
422
method1
1
0
dynamic_dispatch
422
identifier
422
avar
422
value
0
