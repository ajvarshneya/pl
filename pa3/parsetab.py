
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EF98C2B23E47BC1D2D737FC448B0AE42'
    
_lr_action_items = {'THEN':([23,26,30,31,32,37,47,49,50,53,55,74,75,78,81,82,83,84,85,86,87,89,90,102,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,-36,-37,-42,-46,79,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-24,-33,-16,-28,-23,]),'DIVIDE':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,59,59,-36,59,59,59,-46,59,59,59,-15,-20,59,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,59,-19,59,59,-24,-33,-16,59,59,59,59,-23,59,]),'WHILE':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FI':([23,26,30,31,32,37,47,49,50,53,74,75,78,81,82,83,84,85,86,87,89,90,102,111,112,116,118,122,126,],[-18,-51,-49,-50,-48,-52,-36,-37,-42,-46,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-24,-33,-16,-28,126,-23,]),'NEW':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RARROW':([121,],[125,]),'TRUE':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'MINUS':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,65,65,-36,65,65,65,-46,65,65,65,-15,-20,65,-47,-25,-44,65,-45,65,-43,-38,-39,-17,65,-19,65,65,-24,-33,-16,65,65,65,65,-23,65,]),'DOT':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,88,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,66,66,-36,66,-37,-42,-46,66,66,66,-15,-20,66,-47,-25,-44,-41,-45,-40,-43,-38,105,-39,-17,66,-19,66,66,-24,-33,-16,66,66,66,66,-23,66,]),'STRING':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'CASE':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LE':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,58,58,-36,58,58,58,-46,58,58,58,-15,-20,58,-47,-25,-44,58,-45,58,-43,58,58,-17,58,-19,58,58,-24,-33,-16,58,58,58,58,-23,58,]),'RPAREN':([19,23,26,30,31,32,37,40,42,44,47,49,50,52,53,54,74,75,76,77,78,81,82,83,84,85,86,87,89,90,96,102,111,112,114,116,118,126,],[41,-18,-51,-49,-50,-48,-52,-14,-13,71,-36,-37,-42,75,-46,78,-15,-20,-22,102,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-12,-19,-24,-33,-21,-16,-28,-23,]),'SEMI':([4,11,12,20,23,26,30,31,32,37,38,40,45,47,49,50,53,56,74,75,78,81,82,83,84,85,86,87,89,90,102,111,112,116,118,123,126,127,128,],[6,16,-11,-5,-18,-51,-49,-50,-48,-52,-10,-14,-4,-36,-37,-42,-46,80,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-24,-33,-16,-28,-9,-23,-8,129,]),'PLUS':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,63,63,-36,63,63,63,-46,63,63,63,-15,-20,63,-47,-25,-44,63,-45,63,-43,-38,-39,-17,63,-19,63,63,-24,-33,-16,63,63,63,63,-23,63,]),'ISVOID':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'LARROW':([12,32,40,68,],[17,51,-14,94,]),'LT':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,62,62,-36,62,62,62,-46,62,62,62,-15,-20,62,-47,-25,-44,62,-45,62,-43,62,62,-17,62,-19,62,62,-24,-33,-16,62,62,62,62,-23,62,]),'COLON':([13,41,43,71,100,],[18,69,18,97,113,]),'TILDE':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'INTEGER':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'IDENTIFIER':([8,15,16,17,19,24,27,28,29,33,34,35,36,39,51,52,58,59,60,61,62,63,65,66,70,72,73,79,80,92,94,101,105,107,109,115,120,125,129,],[13,13,13,32,43,32,32,32,32,32,32,32,32,43,32,32,32,32,32,32,32,32,32,91,43,32,100,32,32,43,32,32,91,32,32,32,32,32,100,]),'CLASS':([0,6,],[2,2,]),'$end':([1,3,6,9,],[0,-1,-3,-2,]),'INHERITS':([5,],[7,]),'RBRACE':([8,14,15,16,21,22,23,26,30,31,32,37,47,49,50,53,57,74,75,78,80,81,82,83,84,85,86,87,89,90,102,104,111,112,116,118,119,124,126,],[-7,20,-7,-7,45,-6,-18,-51,-49,-50,-48,-52,-36,-37,-42,-46,81,-15,-20,-47,-27,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-26,-24,-33,-16,-28,123,127,-23,]),'EQUALS':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,60,60,-36,60,60,60,-46,60,60,60,-15,-20,60,-47,-25,-44,60,-45,60,-43,60,60,-17,60,-19,60,60,-24,-33,-16,60,60,60,60,-23,60,]),'TIMES':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,61,61,-36,61,61,61,-46,61,61,61,-15,-20,61,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,61,-19,61,61,-24,-33,-16,61,61,61,61,-23,61,]),'ESAC':([99,129,130,],[112,-35,-34,]),'AT':([23,26,30,31,32,37,38,46,47,48,49,50,53,54,55,56,74,75,76,78,81,82,83,84,85,86,87,89,90,98,102,103,108,111,112,116,118,119,122,124,126,128,],[-18,-51,-49,-50,-48,-52,64,64,-36,64,-37,-42,-46,64,64,64,-15,-20,64,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,64,-19,64,64,-24,-33,-16,64,64,64,64,-23,64,]),'LPAREN':([13,17,24,27,28,29,32,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,91,94,101,107,109,115,120,125,],[19,34,34,34,34,34,52,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,52,34,34,34,34,34,34,34,]),'IN':([23,26,30,31,32,37,40,47,49,50,53,67,68,74,75,78,81,82,83,84,85,86,87,89,90,93,102,106,108,111,112,116,117,118,126,],[-18,-51,-49,-50,-48,-52,-14,-36,-37,-42,-46,-32,-30,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,107,-19,-32,-29,-24,-33,-16,-31,-28,-23,]),'ELSE':([23,26,30,31,32,37,47,49,50,53,74,75,78,81,82,83,84,85,86,87,89,90,102,103,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,-36,-37,-42,-46,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,115,-24,-33,-16,-28,-23,]),'POOL':([23,26,30,31,32,37,47,49,50,53,74,75,78,81,82,83,84,85,86,87,89,90,98,102,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,-36,-37,-42,-46,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,111,-19,-24,-33,-16,-28,-23,]),'IF':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'LBRACE':([5,10,17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,95,101,107,109,110,115,120,125,],[8,15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,109,36,36,36,120,36,36,36,]),'FALSE':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'OF':([23,26,30,31,32,37,47,48,49,50,53,74,75,78,81,82,83,84,85,86,87,89,90,102,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,-36,73,-37,-42,-46,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-24,-33,-16,-28,-23,]),'LET':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'NOT':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COMMA':([23,26,30,31,32,37,40,42,47,49,50,53,67,68,74,75,76,78,81,82,83,84,85,86,87,89,90,102,106,108,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,-14,70,-36,-37,-42,-46,92,-30,-15,-20,101,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,92,-29,-24,-33,-16,-28,-23,]),'TYPE':([2,7,18,25,64,69,97,113,],[5,10,40,47,88,95,110,121,]),'LOOP':([23,26,30,31,32,37,46,47,49,50,53,74,75,78,81,82,83,84,85,86,87,89,90,102,111,112,116,118,126,],[-18,-51,-49,-50,-48,-52,72,-36,-37,-42,-46,-15,-20,-47,-25,-44,-41,-45,-40,-43,-38,-39,-17,-19,-24,-33,-16,-28,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'features':([8,15,16,],[14,21,22,]),'expr':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,72,79,80,94,101,107,109,115,120,125,],[38,46,48,49,50,53,54,55,56,74,76,82,83,84,85,86,87,89,98,103,56,108,76,118,119,122,124,128,]),'binding':([39,],[67,]),'feature':([8,15,16,],[11,11,11,]),'dispatch':([17,24,27,28,29,33,34,35,36,51,52,58,59,60,61,62,63,65,66,72,79,80,94,101,105,107,109,115,120,125,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,90,23,23,23,23,23,116,23,23,23,23,23,]),'exprs':([52,101,],[77,114,]),'classes':([0,6,],[3,9,]),'exprsemi':([36,80,],[57,104,]),'bindings':([67,106,],[93,117,]),'formals':([19,70,],[44,96,]),'cases':([73,129,],[99,130,]),'class':([0,6,],[4,4,]),'formal':([8,15,16,19,39,70,92,],[12,12,12,42,68,42,106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classes','program',1,'p_program','main.py',67),
  ('classes -> class SEMI classes','classes',3,'p_classes','main.py',75),
  ('classes -> class SEMI','classes',2,'p_classes_base','main.py',80),
  ('class -> CLASS TYPE INHERITS TYPE LBRACE features RBRACE','class',7,'p_class_inherits','main.py',85),
  ('class -> CLASS TYPE LBRACE features RBRACE','class',5,'p_class_no_inherits','main.py',90),
  ('features -> feature SEMI features','features',3,'p_features','main.py',95),
  ('features -> <empty>','features',0,'p_features_base','main.py',100),
  ('feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE','feature',9,'p_feature_method','main.py',108),
  ('feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE','feature',8,'p_feature_no_init','main.py',113),
  ('feature -> formal LARROW expr','feature',3,'p_feature_init','main.py',118),
  ('feature -> formal','feature',1,'p_feature','main.py',123),
  ('formals -> formal COMMA formals','formals',3,'p_formals','main.py',128),
  ('formals -> formal','formals',1,'p_formals_base','main.py',133),
  ('formal -> IDENTIFIER COLON TYPE','formal',3,'p_formal','main.py',141),
  ('expr -> IDENTIFIER LARROW expr','expr',3,'p_expr_assign','main.py',149),
  ('expr -> expr AT TYPE DOT dispatch','expr',5,'p_expr_static_dispatch','main.py',154),
  ('expr -> expr DOT dispatch','expr',3,'p_expr_dynamic_dispatch','main.py',159),
  ('expr -> dispatch','expr',1,'p_expr_dispatch','main.py',164),
  ('dispatch -> IDENTIFIER LPAREN exprs RPAREN','dispatch',4,'p_dispatch_params','main.py',169),
  ('dispatch -> IDENTIFIER LPAREN RPAREN','dispatch',3,'p_dispatch','main.py',174),
  ('exprs -> expr COMMA exprs','exprs',3,'p_exprs','main.py',179),
  ('exprs -> expr','exprs',1,'p_exprs_base','main.py',184),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','main.py',189),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',194),
  ('expr -> LBRACE exprsemi RBRACE','expr',3,'p_expr_semis','main.py',199),
  ('exprsemi -> expr SEMI exprsemi','exprsemi',3,'p_exprsemi','main.py',204),
  ('exprsemi -> expr SEMI','exprsemi',2,'p_exprsemi_base','main.py',209),
  ('expr -> LET binding bindings IN expr','expr',5,'p_expr_let','main.py',214),
  ('binding -> formal LARROW expr','binding',3,'p_binding_init','main.py',219),
  ('binding -> formal','binding',1,'p_binding_no_init','main.py',224),
  ('bindings -> COMMA formal bindings','bindings',3,'p_bindings','main.py',233),
  ('bindings -> <empty>','bindings',0,'p_bindings_base','main.py',238),
  ('expr -> CASE expr OF cases ESAC','expr',5,'p_expr_case','main.py',243),
  ('cases -> IDENTIFIER COLON TYPE RARROW expr SEMI cases','cases',7,'p_cases','main.py',248),
  ('cases -> IDENTIFIER COLON TYPE RARROW expr SEMI','cases',6,'p_cases_base','main.py',253),
  ('expr -> NEW TYPE','expr',2,'p_expr_new','main.py',258),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','main.py',263),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','main.py',268),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','main.py',273),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','main.py',278),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','main.py',283),
  ('expr -> TILDE expr','expr',2,'p_expr_negate','main.py',288),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','main.py',293),
  ('expr -> expr LE expr','expr',3,'p_expr_le','main.py',298),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_equals','main.py',303),
  ('expr -> NOT expr','expr',2,'p_expr_not','main.py',308),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','main.py',313),
  ('expr -> IDENTIFIER','expr',1,'p_expr_identifier','main.py',318),
  ('expr -> INTEGER','expr',1,'p_expr_integer','main.py',323),
  ('expr -> STRING','expr',1,'p_expr_string','main.py',328),
  ('expr -> TRUE','expr',1,'p_expr_true','main.py',333),
  ('expr -> FALSE','expr',1,'p_expr_false','main.py',338),
]
