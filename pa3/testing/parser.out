Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> classes
Rule 2     classes -> class SEMI classes
Rule 3     classes -> class SEMI
Rule 4     class -> CLASS TYPE INHERITS TYPE LBRACE features RBRACE
Rule 5     class -> CLASS TYPE LBRACE features RBRACE
Rule 6     features -> feature SEMI features
Rule 7     features -> <empty>
Rule 8     feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE
Rule 9     feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE
Rule 10    feature -> IDENTIFIER COLON TYPE LARROW expr
Rule 11    feature -> IDENTIFIER COLON TYPE
Rule 12    formals -> formal COMMA formals
Rule 13    formals -> formal
Rule 14    formal -> IDENTIFIER COLON TYPE
Rule 15    expr -> IDENTIFIER LARROW expr
Rule 16    expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN
Rule 17    expr -> expr DOT IDENTIFIER LPAREN RPAREN
Rule 18    expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
Rule 19    expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
Rule 20    expr -> IDENTIFIER LPAREN exprs RPAREN
Rule 21    expr -> IDENTIFIER LPAREN RPAREN
Rule 22    exprs -> expr COMMA exprs
Rule 23    exprs -> expr
Rule 24    expr -> IF expr THEN expr ELSE expr FI
Rule 25    expr -> WHILE expr LOOP expr POOL
Rule 26    expr -> LBRACE exprsemi RBRACE
Rule 27    exprsemi -> expr SEMI exprsemi
Rule 28    exprsemi -> expr SEMI
Rule 29    expr -> LET bindings IN expr
Rule 30    bindings -> IDENTIFIER COLON TYPE LARROW expr bindings_tail
Rule 31    bindings -> IDENTIFIER COLON TYPE bindings_tail
Rule 32    bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail
Rule 33    bindings_tail -> COMMA IDENTIFIER COLON TYPE bindings_tail
Rule 34    bindings_tail -> <empty>
Rule 35    expr -> CASE expr OF cases ESAC
Rule 36    cases -> IDENTIFIER COLON TYPE RARROW expr SEMI cases
Rule 37    cases -> IDENTIFIER COLON TYPE RARROW expr SEMI
Rule 38    expr -> NEW TYPE
Rule 39    expr -> ISVOID expr
Rule 40    expr -> expr PLUS expr
Rule 41    expr -> expr MINUS expr
Rule 42    expr -> expr TIMES expr
Rule 43    expr -> expr DIVIDE expr
Rule 44    expr -> expr LT expr
Rule 45    expr -> expr LE expr
Rule 46    expr -> expr EQUALS expr
Rule 47    expr -> NOT expr
Rule 48    expr -> TILDE expr
Rule 49    expr -> LPAREN expr RPAREN
Rule 50    expr -> IDENTIFIER
Rule 51    expr -> INTEGER
Rule 52    expr -> STRING
Rule 53    expr -> TRUE
Rule 54    expr -> FALSE

Terminals, with rules where they appear

AT                   : 18 19
CASE                 : 35
CLASS                : 4 5
COLON                : 8 9 10 11 14 30 31 32 33 36 37
COMMA                : 12 22 32 33
DIVIDE               : 43
DOT                  : 16 17 18 19
ELSE                 : 24
EQUALS               : 46
ESAC                 : 35
FALSE                : 54
FI                   : 24
IDENTIFIER           : 8 9 10 11 14 15 16 17 18 19 20 21 30 31 32 33 36 37 50
IF                   : 24
IN                   : 29
INHERITS             : 4
INTEGER              : 51
ISVOID               : 39
LARROW               : 10 15 30 32
LBRACE               : 4 5 8 9 26
LE                   : 45
LET                  : 29
LOOP                 : 25
LPAREN               : 8 9 16 17 18 19 20 21 49
LT                   : 44
MINUS                : 41
NEW                  : 38
NOT                  : 47
OF                   : 35
PLUS                 : 40
POOL                 : 25
RARROW               : 36 37
RBRACE               : 4 5 8 9 26
RPAREN               : 8 9 16 17 18 19 20 21 49
SEMI                 : 2 3 6 27 28 36 37
STRING               : 52
THEN                 : 24
TILDE                : 48
TIMES                : 42
TRUE                 : 53
TYPE                 : 4 4 5 8 9 10 11 14 18 19 30 31 32 33 36 37 38
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

bindings             : 29
bindings_tail        : 30 31 32 33
cases                : 35 36
class                : 2 3
classes              : 1 2
expr                 : 8 9 10 15 16 17 18 19 22 23 24 24 24 25 25 27 28 29 30 32 35 36 37 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49
exprs                : 16 18 20 22
exprsemi             : 26 27
feature              : 6
features             : 4 5 6
formal               : 12 13
formals              : 8 12
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . classes
    (2) classes -> . class SEMI classes
    (3) classes -> . class SEMI
    (4) class -> . CLASS TYPE INHERITS TYPE LBRACE features RBRACE
    (5) class -> . CLASS TYPE LBRACE features RBRACE

    CLASS           shift and go to state 2

    classes                        shift and go to state 3
    program                        shift and go to state 1
    class                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (4) class -> CLASS . TYPE INHERITS TYPE LBRACE features RBRACE
    (5) class -> CLASS . TYPE LBRACE features RBRACE

    TYPE            shift and go to state 5


state 3

    (1) program -> classes .

    $end            reduce using rule 1 (program -> classes .)


state 4

    (2) classes -> class . SEMI classes
    (3) classes -> class . SEMI

    SEMI            shift and go to state 6


state 5

    (4) class -> CLASS TYPE . INHERITS TYPE LBRACE features RBRACE
    (5) class -> CLASS TYPE . LBRACE features RBRACE

    INHERITS        shift and go to state 7
    LBRACE          shift and go to state 8


state 6

    (2) classes -> class SEMI . classes
    (3) classes -> class SEMI .
    (2) classes -> . class SEMI classes
    (3) classes -> . class SEMI
    (4) class -> . CLASS TYPE INHERITS TYPE LBRACE features RBRACE
    (5) class -> . CLASS TYPE LBRACE features RBRACE

    $end            reduce using rule 3 (classes -> class SEMI .)
    CLASS           shift and go to state 2

    classes                        shift and go to state 9
    class                          shift and go to state 4

state 7

    (4) class -> CLASS TYPE INHERITS . TYPE LBRACE features RBRACE

    TYPE            shift and go to state 10


state 8

    (5) class -> CLASS TYPE LBRACE . features RBRACE
    (6) features -> . feature SEMI features
    (7) features -> .
    (8) feature -> . IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE
    (9) feature -> . IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE
    (10) feature -> . IDENTIFIER COLON TYPE LARROW expr
    (11) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 7 (features -> .)
    IDENTIFIER      shift and go to state 12

    features                       shift and go to state 13
    feature                        shift and go to state 11

state 9

    (2) classes -> class SEMI classes .

    $end            reduce using rule 2 (classes -> class SEMI classes .)


state 10

    (4) class -> CLASS TYPE INHERITS TYPE . LBRACE features RBRACE

    LBRACE          shift and go to state 14


state 11

    (6) features -> feature . SEMI features

    SEMI            shift and go to state 15


state 12

    (8) feature -> IDENTIFIER . LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE
    (9) feature -> IDENTIFIER . LPAREN RPAREN COLON TYPE LBRACE expr RBRACE
    (10) feature -> IDENTIFIER . COLON TYPE LARROW expr
    (11) feature -> IDENTIFIER . COLON TYPE

    LPAREN          shift and go to state 17
    COLON           shift and go to state 16


state 13

    (5) class -> CLASS TYPE LBRACE features . RBRACE

    RBRACE          shift and go to state 18


state 14

    (4) class -> CLASS TYPE INHERITS TYPE LBRACE . features RBRACE
    (6) features -> . feature SEMI features
    (7) features -> .
    (8) feature -> . IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE
    (9) feature -> . IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE
    (10) feature -> . IDENTIFIER COLON TYPE LARROW expr
    (11) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 7 (features -> .)
    IDENTIFIER      shift and go to state 12

    features                       shift and go to state 19
    feature                        shift and go to state 11

state 15

    (6) features -> feature SEMI . features
    (6) features -> . feature SEMI features
    (7) features -> .
    (8) feature -> . IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE
    (9) feature -> . IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE
    (10) feature -> . IDENTIFIER COLON TYPE LARROW expr
    (11) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 7 (features -> .)
    IDENTIFIER      shift and go to state 12

    feature                        shift and go to state 11
    features                       shift and go to state 20

state 16

    (10) feature -> IDENTIFIER COLON . TYPE LARROW expr
    (11) feature -> IDENTIFIER COLON . TYPE

    TYPE            shift and go to state 21


state 17

    (8) feature -> IDENTIFIER LPAREN . formals RPAREN COLON TYPE LBRACE expr RBRACE
    (9) feature -> IDENTIFIER LPAREN . RPAREN COLON TYPE LBRACE expr RBRACE
    (12) formals -> . formal COMMA formals
    (13) formals -> . formal
    (14) formal -> . IDENTIFIER COLON TYPE

    RPAREN          shift and go to state 22
    IDENTIFIER      shift and go to state 24

    formal                         shift and go to state 23
    formals                        shift and go to state 25

state 18

    (5) class -> CLASS TYPE LBRACE features RBRACE .

    SEMI            reduce using rule 5 (class -> CLASS TYPE LBRACE features RBRACE .)


state 19

    (4) class -> CLASS TYPE INHERITS TYPE LBRACE features . RBRACE

    RBRACE          shift and go to state 26


state 20

    (6) features -> feature SEMI features .

    RBRACE          reduce using rule 6 (features -> feature SEMI features .)


state 21

    (10) feature -> IDENTIFIER COLON TYPE . LARROW expr
    (11) feature -> IDENTIFIER COLON TYPE .

    LARROW          shift and go to state 27
    SEMI            reduce using rule 11 (feature -> IDENTIFIER COLON TYPE .)


state 22

    (9) feature -> IDENTIFIER LPAREN RPAREN . COLON TYPE LBRACE expr RBRACE

    COLON           shift and go to state 28


state 23

    (12) formals -> formal . COMMA formals
    (13) formals -> formal .

    COMMA           shift and go to state 29
    RPAREN          reduce using rule 13 (formals -> formal .)


state 24

    (14) formal -> IDENTIFIER . COLON TYPE

    COLON           shift and go to state 30


state 25

    (8) feature -> IDENTIFIER LPAREN formals . RPAREN COLON TYPE LBRACE expr RBRACE

    RPAREN          shift and go to state 31


state 26

    (4) class -> CLASS TYPE INHERITS TYPE LBRACE features RBRACE .

    SEMI            reduce using rule 4 (class -> CLASS TYPE INHERITS TYPE LBRACE features RBRACE .)


state 27

    (10) feature -> IDENTIFIER COLON TYPE LARROW . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 46

state 28

    (9) feature -> IDENTIFIER LPAREN RPAREN COLON . TYPE LBRACE expr RBRACE

    TYPE            shift and go to state 48


state 29

    (12) formals -> formal COMMA . formals
    (12) formals -> . formal COMMA formals
    (13) formals -> . formal
    (14) formal -> . IDENTIFIER COLON TYPE

    IDENTIFIER      shift and go to state 24

    formals                        shift and go to state 49
    formal                         shift and go to state 23

state 30

    (14) formal -> IDENTIFIER COLON . TYPE

    TYPE            shift and go to state 50


state 31

    (8) feature -> IDENTIFIER LPAREN formals RPAREN . COLON TYPE LBRACE expr RBRACE

    COLON           shift and go to state 51


state 32

    (25) expr -> WHILE . expr LOOP expr POOL
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 52

state 33

    (38) expr -> NEW . TYPE

    TYPE            shift and go to state 53


state 34

    (51) expr -> INTEGER .

    DOT             reduce using rule 51 (expr -> INTEGER .)
    AT              reduce using rule 51 (expr -> INTEGER .)
    PLUS            reduce using rule 51 (expr -> INTEGER .)
    MINUS           reduce using rule 51 (expr -> INTEGER .)
    TIMES           reduce using rule 51 (expr -> INTEGER .)
    DIVIDE          reduce using rule 51 (expr -> INTEGER .)
    LT              reduce using rule 51 (expr -> INTEGER .)
    LE              reduce using rule 51 (expr -> INTEGER .)
    EQUALS          reduce using rule 51 (expr -> INTEGER .)
    SEMI            reduce using rule 51 (expr -> INTEGER .)
    LOOP            reduce using rule 51 (expr -> INTEGER .)
    OF              reduce using rule 51 (expr -> INTEGER .)
    RPAREN          reduce using rule 51 (expr -> INTEGER .)
    THEN            reduce using rule 51 (expr -> INTEGER .)
    COMMA           reduce using rule 51 (expr -> INTEGER .)
    RBRACE          reduce using rule 51 (expr -> INTEGER .)
    POOL            reduce using rule 51 (expr -> INTEGER .)
    ELSE            reduce using rule 51 (expr -> INTEGER .)
    FI              reduce using rule 51 (expr -> INTEGER .)
    IN              reduce using rule 51 (expr -> INTEGER .)


state 35

    (53) expr -> TRUE .

    DOT             reduce using rule 53 (expr -> TRUE .)
    AT              reduce using rule 53 (expr -> TRUE .)
    PLUS            reduce using rule 53 (expr -> TRUE .)
    MINUS           reduce using rule 53 (expr -> TRUE .)
    TIMES           reduce using rule 53 (expr -> TRUE .)
    DIVIDE          reduce using rule 53 (expr -> TRUE .)
    LT              reduce using rule 53 (expr -> TRUE .)
    LE              reduce using rule 53 (expr -> TRUE .)
    EQUALS          reduce using rule 53 (expr -> TRUE .)
    SEMI            reduce using rule 53 (expr -> TRUE .)
    LOOP            reduce using rule 53 (expr -> TRUE .)
    OF              reduce using rule 53 (expr -> TRUE .)
    RPAREN          reduce using rule 53 (expr -> TRUE .)
    THEN            reduce using rule 53 (expr -> TRUE .)
    COMMA           reduce using rule 53 (expr -> TRUE .)
    RBRACE          reduce using rule 53 (expr -> TRUE .)
    POOL            reduce using rule 53 (expr -> TRUE .)
    ELSE            reduce using rule 53 (expr -> TRUE .)
    FI              reduce using rule 53 (expr -> TRUE .)
    IN              reduce using rule 53 (expr -> TRUE .)


state 36

    (35) expr -> CASE . expr OF cases ESAC
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 54

state 37

    (39) expr -> ISVOID . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 55

state 38

    (48) expr -> TILDE . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 56

state 39

    (52) expr -> STRING .

    DOT             reduce using rule 52 (expr -> STRING .)
    AT              reduce using rule 52 (expr -> STRING .)
    PLUS            reduce using rule 52 (expr -> STRING .)
    MINUS           reduce using rule 52 (expr -> STRING .)
    TIMES           reduce using rule 52 (expr -> STRING .)
    DIVIDE          reduce using rule 52 (expr -> STRING .)
    LT              reduce using rule 52 (expr -> STRING .)
    LE              reduce using rule 52 (expr -> STRING .)
    EQUALS          reduce using rule 52 (expr -> STRING .)
    SEMI            reduce using rule 52 (expr -> STRING .)
    LOOP            reduce using rule 52 (expr -> STRING .)
    OF              reduce using rule 52 (expr -> STRING .)
    RPAREN          reduce using rule 52 (expr -> STRING .)
    THEN            reduce using rule 52 (expr -> STRING .)
    COMMA           reduce using rule 52 (expr -> STRING .)
    RBRACE          reduce using rule 52 (expr -> STRING .)
    POOL            reduce using rule 52 (expr -> STRING .)
    ELSE            reduce using rule 52 (expr -> STRING .)
    FI              reduce using rule 52 (expr -> STRING .)
    IN              reduce using rule 52 (expr -> STRING .)


state 40

    (15) expr -> IDENTIFIER . LARROW expr
    (20) expr -> IDENTIFIER . LPAREN exprs RPAREN
    (21) expr -> IDENTIFIER . LPAREN RPAREN
    (50) expr -> IDENTIFIER .

    LARROW          shift and go to state 57
    LPAREN          shift and go to state 58
    DOT             reduce using rule 50 (expr -> IDENTIFIER .)
    AT              reduce using rule 50 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 50 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 50 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 50 (expr -> IDENTIFIER .)
    DIVIDE          reduce using rule 50 (expr -> IDENTIFIER .)
    LT              reduce using rule 50 (expr -> IDENTIFIER .)
    LE              reduce using rule 50 (expr -> IDENTIFIER .)
    EQUALS          reduce using rule 50 (expr -> IDENTIFIER .)
    SEMI            reduce using rule 50 (expr -> IDENTIFIER .)
    LOOP            reduce using rule 50 (expr -> IDENTIFIER .)
    OF              reduce using rule 50 (expr -> IDENTIFIER .)
    RPAREN          reduce using rule 50 (expr -> IDENTIFIER .)
    THEN            reduce using rule 50 (expr -> IDENTIFIER .)
    COMMA           reduce using rule 50 (expr -> IDENTIFIER .)
    RBRACE          reduce using rule 50 (expr -> IDENTIFIER .)
    POOL            reduce using rule 50 (expr -> IDENTIFIER .)
    ELSE            reduce using rule 50 (expr -> IDENTIFIER .)
    FI              reduce using rule 50 (expr -> IDENTIFIER .)
    IN              reduce using rule 50 (expr -> IDENTIFIER .)


state 41

    (47) expr -> NOT . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 59

state 42

    (49) expr -> LPAREN . expr RPAREN
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 60

state 43

    (24) expr -> IF . expr THEN expr ELSE expr FI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 61

state 44

    (26) expr -> LBRACE . exprsemi RBRACE
    (27) exprsemi -> . expr SEMI exprsemi
    (28) exprsemi -> . expr SEMI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 62
    exprsemi                       shift and go to state 63

state 45

    (54) expr -> FALSE .

    DOT             reduce using rule 54 (expr -> FALSE .)
    AT              reduce using rule 54 (expr -> FALSE .)
    PLUS            reduce using rule 54 (expr -> FALSE .)
    MINUS           reduce using rule 54 (expr -> FALSE .)
    TIMES           reduce using rule 54 (expr -> FALSE .)
    DIVIDE          reduce using rule 54 (expr -> FALSE .)
    LT              reduce using rule 54 (expr -> FALSE .)
    LE              reduce using rule 54 (expr -> FALSE .)
    EQUALS          reduce using rule 54 (expr -> FALSE .)
    SEMI            reduce using rule 54 (expr -> FALSE .)
    LOOP            reduce using rule 54 (expr -> FALSE .)
    OF              reduce using rule 54 (expr -> FALSE .)
    RPAREN          reduce using rule 54 (expr -> FALSE .)
    THEN            reduce using rule 54 (expr -> FALSE .)
    COMMA           reduce using rule 54 (expr -> FALSE .)
    RBRACE          reduce using rule 54 (expr -> FALSE .)
    POOL            reduce using rule 54 (expr -> FALSE .)
    ELSE            reduce using rule 54 (expr -> FALSE .)
    FI              reduce using rule 54 (expr -> FALSE .)
    IN              reduce using rule 54 (expr -> FALSE .)


state 46

    (10) feature -> IDENTIFIER COLON TYPE LARROW expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            reduce using rule 10 (feature -> IDENTIFIER COLON TYPE LARROW expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 47

    (29) expr -> LET . bindings IN expr
    (30) bindings -> . IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (31) bindings -> . IDENTIFIER COLON TYPE bindings_tail

    IDENTIFIER      shift and go to state 74

    bindings                       shift and go to state 73

state 48

    (9) feature -> IDENTIFIER LPAREN RPAREN COLON TYPE . LBRACE expr RBRACE

    LBRACE          shift and go to state 75


state 49

    (12) formals -> formal COMMA formals .

    RPAREN          reduce using rule 12 (formals -> formal COMMA formals .)


state 50

    (14) formal -> IDENTIFIER COLON TYPE .

    COMMA           reduce using rule 14 (formal -> IDENTIFIER COLON TYPE .)
    RPAREN          reduce using rule 14 (formal -> IDENTIFIER COLON TYPE .)


state 51

    (8) feature -> IDENTIFIER LPAREN formals RPAREN COLON . TYPE LBRACE expr RBRACE

    TYPE            shift and go to state 76


state 52

    (25) expr -> WHILE expr . LOOP expr POOL
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    LOOP            shift and go to state 77
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 53

    (38) expr -> NEW TYPE .

    DOT             reduce using rule 38 (expr -> NEW TYPE .)
    AT              reduce using rule 38 (expr -> NEW TYPE .)
    PLUS            reduce using rule 38 (expr -> NEW TYPE .)
    MINUS           reduce using rule 38 (expr -> NEW TYPE .)
    TIMES           reduce using rule 38 (expr -> NEW TYPE .)
    DIVIDE          reduce using rule 38 (expr -> NEW TYPE .)
    LT              reduce using rule 38 (expr -> NEW TYPE .)
    LE              reduce using rule 38 (expr -> NEW TYPE .)
    EQUALS          reduce using rule 38 (expr -> NEW TYPE .)
    SEMI            reduce using rule 38 (expr -> NEW TYPE .)
    LOOP            reduce using rule 38 (expr -> NEW TYPE .)
    OF              reduce using rule 38 (expr -> NEW TYPE .)
    RPAREN          reduce using rule 38 (expr -> NEW TYPE .)
    THEN            reduce using rule 38 (expr -> NEW TYPE .)
    COMMA           reduce using rule 38 (expr -> NEW TYPE .)
    RBRACE          reduce using rule 38 (expr -> NEW TYPE .)
    POOL            reduce using rule 38 (expr -> NEW TYPE .)
    ELSE            reduce using rule 38 (expr -> NEW TYPE .)
    FI              reduce using rule 38 (expr -> NEW TYPE .)
    IN              reduce using rule 38 (expr -> NEW TYPE .)


state 54

    (35) expr -> CASE expr . OF cases ESAC
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    OF              shift and go to state 78
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 55

    (39) expr -> ISVOID expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 39 (expr -> ISVOID expr .)
    MINUS           reduce using rule 39 (expr -> ISVOID expr .)
    TIMES           reduce using rule 39 (expr -> ISVOID expr .)
    DIVIDE          reduce using rule 39 (expr -> ISVOID expr .)
    LT              reduce using rule 39 (expr -> ISVOID expr .)
    LE              reduce using rule 39 (expr -> ISVOID expr .)
    EQUALS          reduce using rule 39 (expr -> ISVOID expr .)
    SEMI            reduce using rule 39 (expr -> ISVOID expr .)
    LOOP            reduce using rule 39 (expr -> ISVOID expr .)
    OF              reduce using rule 39 (expr -> ISVOID expr .)
    RPAREN          reduce using rule 39 (expr -> ISVOID expr .)
    THEN            reduce using rule 39 (expr -> ISVOID expr .)
    COMMA           reduce using rule 39 (expr -> ISVOID expr .)
    RBRACE          reduce using rule 39 (expr -> ISVOID expr .)
    POOL            reduce using rule 39 (expr -> ISVOID expr .)
    ELSE            reduce using rule 39 (expr -> ISVOID expr .)
    FI              reduce using rule 39 (expr -> ISVOID expr .)
    IN              reduce using rule 39 (expr -> ISVOID expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69

  ! DOT             [ reduce using rule 39 (expr -> ISVOID expr .) ]
  ! AT              [ reduce using rule 39 (expr -> ISVOID expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 56

    (48) expr -> TILDE expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 48 (expr -> TILDE expr .)
    MINUS           reduce using rule 48 (expr -> TILDE expr .)
    TIMES           reduce using rule 48 (expr -> TILDE expr .)
    DIVIDE          reduce using rule 48 (expr -> TILDE expr .)
    LT              reduce using rule 48 (expr -> TILDE expr .)
    LE              reduce using rule 48 (expr -> TILDE expr .)
    EQUALS          reduce using rule 48 (expr -> TILDE expr .)
    SEMI            reduce using rule 48 (expr -> TILDE expr .)
    LOOP            reduce using rule 48 (expr -> TILDE expr .)
    OF              reduce using rule 48 (expr -> TILDE expr .)
    RPAREN          reduce using rule 48 (expr -> TILDE expr .)
    THEN            reduce using rule 48 (expr -> TILDE expr .)
    COMMA           reduce using rule 48 (expr -> TILDE expr .)
    RBRACE          reduce using rule 48 (expr -> TILDE expr .)
    POOL            reduce using rule 48 (expr -> TILDE expr .)
    ELSE            reduce using rule 48 (expr -> TILDE expr .)
    FI              reduce using rule 48 (expr -> TILDE expr .)
    IN              reduce using rule 48 (expr -> TILDE expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69

  ! DOT             [ reduce using rule 48 (expr -> TILDE expr .) ]
  ! AT              [ reduce using rule 48 (expr -> TILDE expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 57

    (15) expr -> IDENTIFIER LARROW . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 79

state 58

    (20) expr -> IDENTIFIER LPAREN . exprs RPAREN
    (21) expr -> IDENTIFIER LPAREN . RPAREN
    (22) exprs -> . expr COMMA exprs
    (23) exprs -> . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    RPAREN          shift and go to state 80
    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    exprs                          shift and go to state 82
    expr                           shift and go to state 81

state 59

    (47) expr -> NOT expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            reduce using rule 47 (expr -> NOT expr .)
    LOOP            reduce using rule 47 (expr -> NOT expr .)
    OF              reduce using rule 47 (expr -> NOT expr .)
    RPAREN          reduce using rule 47 (expr -> NOT expr .)
    THEN            reduce using rule 47 (expr -> NOT expr .)
    COMMA           reduce using rule 47 (expr -> NOT expr .)
    RBRACE          reduce using rule 47 (expr -> NOT expr .)
    POOL            reduce using rule 47 (expr -> NOT expr .)
    ELSE            reduce using rule 47 (expr -> NOT expr .)
    FI              reduce using rule 47 (expr -> NOT expr .)
    IN              reduce using rule 47 (expr -> NOT expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66

  ! DOT             [ reduce using rule 47 (expr -> NOT expr .) ]
  ! AT              [ reduce using rule 47 (expr -> NOT expr .) ]
  ! PLUS            [ reduce using rule 47 (expr -> NOT expr .) ]
  ! MINUS           [ reduce using rule 47 (expr -> NOT expr .) ]
  ! TIMES           [ reduce using rule 47 (expr -> NOT expr .) ]
  ! DIVIDE          [ reduce using rule 47 (expr -> NOT expr .) ]
  ! LT              [ reduce using rule 47 (expr -> NOT expr .) ]
  ! LE              [ reduce using rule 47 (expr -> NOT expr .) ]
  ! EQUALS          [ reduce using rule 47 (expr -> NOT expr .) ]


state 60

    (49) expr -> LPAREN expr . RPAREN
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    RPAREN          shift and go to state 83
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 61

    (24) expr -> IF expr . THEN expr ELSE expr FI
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    THEN            shift and go to state 84
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 62

    (27) exprsemi -> expr . SEMI exprsemi
    (28) exprsemi -> expr . SEMI
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            shift and go to state 85
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 63

    (26) expr -> LBRACE exprsemi . RBRACE

    RBRACE          shift and go to state 86


state 64

    (45) expr -> expr LE . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 87

state 65

    (43) expr -> expr DIVIDE . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 88

state 66

    (46) expr -> expr EQUALS . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 89

state 67

    (42) expr -> expr TIMES . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 90

state 68

    (44) expr -> expr LT . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 91

state 69

    (18) expr -> expr AT . TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr AT . TYPE DOT IDENTIFIER LPAREN RPAREN

    TYPE            shift and go to state 92


state 70

    (40) expr -> expr PLUS . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 93

state 71

    (41) expr -> expr MINUS . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 94

state 72

    (16) expr -> expr DOT . IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr DOT . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 95


state 73

    (29) expr -> LET bindings . IN expr

    IN              shift and go to state 96


state 74

    (30) bindings -> IDENTIFIER . COLON TYPE LARROW expr bindings_tail
    (31) bindings -> IDENTIFIER . COLON TYPE bindings_tail

    COLON           shift and go to state 97


state 75

    (9) feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE . expr RBRACE
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 98

state 76

    (8) feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE . LBRACE expr RBRACE

    LBRACE          shift and go to state 99


state 77

    (25) expr -> WHILE expr LOOP . expr POOL
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 100

state 78

    (35) expr -> CASE expr OF . cases ESAC
    (36) cases -> . IDENTIFIER COLON TYPE RARROW expr SEMI cases
    (37) cases -> . IDENTIFIER COLON TYPE RARROW expr SEMI

    IDENTIFIER      shift and go to state 102

    cases                          shift and go to state 101

state 79

    (15) expr -> IDENTIFIER LARROW expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    LOOP            reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    OF              reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    RPAREN          reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    THEN            reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    COMMA           reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    RBRACE          reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    POOL            reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    ELSE            reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    FI              reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    IN              reduce using rule 15 (expr -> IDENTIFIER LARROW expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66

  ! DOT             [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! AT              [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! PLUS            [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! MINUS           [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! TIMES           [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! DIVIDE          [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! LT              [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! LE              [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]
  ! EQUALS          [ reduce using rule 15 (expr -> IDENTIFIER LARROW expr .) ]


state 80

    (21) expr -> IDENTIFIER LPAREN RPAREN .

    DOT             reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    AT              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    SEMI            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    LOOP            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    OF              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    THEN            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    POOL            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    FI              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 21 (expr -> IDENTIFIER LPAREN RPAREN .)


state 81

    (22) exprs -> expr . COMMA exprs
    (23) exprs -> expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    COMMA           shift and go to state 103
    RPAREN          reduce using rule 23 (exprs -> expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 82

    (20) expr -> IDENTIFIER LPAREN exprs . RPAREN

    RPAREN          shift and go to state 104


state 83

    (49) expr -> LPAREN expr RPAREN .

    DOT             reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    AT              reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    LE              reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    EQUALS          reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    SEMI            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    LOOP            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    OF              reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    POOL            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    FI              reduce using rule 49 (expr -> LPAREN expr RPAREN .)
    IN              reduce using rule 49 (expr -> LPAREN expr RPAREN .)


state 84

    (24) expr -> IF expr THEN . expr ELSE expr FI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 105

state 85

    (27) exprsemi -> expr SEMI . exprsemi
    (28) exprsemi -> expr SEMI .
    (27) exprsemi -> . expr SEMI exprsemi
    (28) exprsemi -> . expr SEMI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    RBRACE          reduce using rule 28 (exprsemi -> expr SEMI .)
    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 62
    exprsemi                       shift and go to state 106

state 86

    (26) expr -> LBRACE exprsemi RBRACE .

    DOT             reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    AT              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    PLUS            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    MINUS           reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    TIMES           reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    DIVIDE          reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    LT              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    LE              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    EQUALS          reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    SEMI            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    LOOP            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    OF              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    RPAREN          reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    THEN            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    COMMA           reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    RBRACE          reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    POOL            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    ELSE            reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    FI              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)
    IN              reduce using rule 26 (expr -> LBRACE exprsemi RBRACE .)


state 87

    (45) expr -> expr LE expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    LT              reduce using rule 45 (expr -> expr LE expr .)
    LE              reduce using rule 45 (expr -> expr LE expr .)
    EQUALS          reduce using rule 45 (expr -> expr LE expr .)
    SEMI            reduce using rule 45 (expr -> expr LE expr .)
    LOOP            reduce using rule 45 (expr -> expr LE expr .)
    OF              reduce using rule 45 (expr -> expr LE expr .)
    RPAREN          reduce using rule 45 (expr -> expr LE expr .)
    THEN            reduce using rule 45 (expr -> expr LE expr .)
    COMMA           reduce using rule 45 (expr -> expr LE expr .)
    RBRACE          reduce using rule 45 (expr -> expr LE expr .)
    POOL            reduce using rule 45 (expr -> expr LE expr .)
    ELSE            reduce using rule 45 (expr -> expr LE expr .)
    FI              reduce using rule 45 (expr -> expr LE expr .)
    IN              reduce using rule 45 (expr -> expr LE expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65

  ! DOT             [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! AT              [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! PLUS            [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! MINUS           [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! TIMES           [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! DIVIDE          [ reduce using rule 45 (expr -> expr LE expr .) ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 88

    (43) expr -> expr DIVIDE expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 43 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 43 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 43 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 43 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 43 (expr -> expr DIVIDE expr .)
    LE              reduce using rule 43 (expr -> expr DIVIDE expr .)
    EQUALS          reduce using rule 43 (expr -> expr DIVIDE expr .)
    SEMI            reduce using rule 43 (expr -> expr DIVIDE expr .)
    LOOP            reduce using rule 43 (expr -> expr DIVIDE expr .)
    OF              reduce using rule 43 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 43 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 43 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 43 (expr -> expr DIVIDE expr .)
    RBRACE          reduce using rule 43 (expr -> expr DIVIDE expr .)
    POOL            reduce using rule 43 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 43 (expr -> expr DIVIDE expr .)
    FI              reduce using rule 43 (expr -> expr DIVIDE expr .)
    IN              reduce using rule 43 (expr -> expr DIVIDE expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69

  ! DOT             [ reduce using rule 43 (expr -> expr DIVIDE expr .) ]
  ! AT              [ reduce using rule 43 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 89

    (46) expr -> expr EQUALS expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    LT              reduce using rule 46 (expr -> expr EQUALS expr .)
    LE              reduce using rule 46 (expr -> expr EQUALS expr .)
    EQUALS          reduce using rule 46 (expr -> expr EQUALS expr .)
    SEMI            reduce using rule 46 (expr -> expr EQUALS expr .)
    LOOP            reduce using rule 46 (expr -> expr EQUALS expr .)
    OF              reduce using rule 46 (expr -> expr EQUALS expr .)
    RPAREN          reduce using rule 46 (expr -> expr EQUALS expr .)
    THEN            reduce using rule 46 (expr -> expr EQUALS expr .)
    COMMA           reduce using rule 46 (expr -> expr EQUALS expr .)
    RBRACE          reduce using rule 46 (expr -> expr EQUALS expr .)
    POOL            reduce using rule 46 (expr -> expr EQUALS expr .)
    ELSE            reduce using rule 46 (expr -> expr EQUALS expr .)
    FI              reduce using rule 46 (expr -> expr EQUALS expr .)
    IN              reduce using rule 46 (expr -> expr EQUALS expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65

  ! DOT             [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! AT              [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! PLUS            [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! MINUS           [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! TIMES           [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 46 (expr -> expr EQUALS expr .) ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 90

    (42) expr -> expr TIMES expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 42 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 42 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 42 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 42 (expr -> expr TIMES expr .)
    LT              reduce using rule 42 (expr -> expr TIMES expr .)
    LE              reduce using rule 42 (expr -> expr TIMES expr .)
    EQUALS          reduce using rule 42 (expr -> expr TIMES expr .)
    SEMI            reduce using rule 42 (expr -> expr TIMES expr .)
    LOOP            reduce using rule 42 (expr -> expr TIMES expr .)
    OF              reduce using rule 42 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 42 (expr -> expr TIMES expr .)
    THEN            reduce using rule 42 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 42 (expr -> expr TIMES expr .)
    RBRACE          reduce using rule 42 (expr -> expr TIMES expr .)
    POOL            reduce using rule 42 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 42 (expr -> expr TIMES expr .)
    FI              reduce using rule 42 (expr -> expr TIMES expr .)
    IN              reduce using rule 42 (expr -> expr TIMES expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69

  ! DOT             [ reduce using rule 42 (expr -> expr TIMES expr .) ]
  ! AT              [ reduce using rule 42 (expr -> expr TIMES expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 65 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 91

    (44) expr -> expr LT expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    LT              reduce using rule 44 (expr -> expr LT expr .)
    LE              reduce using rule 44 (expr -> expr LT expr .)
    EQUALS          reduce using rule 44 (expr -> expr LT expr .)
    SEMI            reduce using rule 44 (expr -> expr LT expr .)
    LOOP            reduce using rule 44 (expr -> expr LT expr .)
    OF              reduce using rule 44 (expr -> expr LT expr .)
    RPAREN          reduce using rule 44 (expr -> expr LT expr .)
    THEN            reduce using rule 44 (expr -> expr LT expr .)
    COMMA           reduce using rule 44 (expr -> expr LT expr .)
    RBRACE          reduce using rule 44 (expr -> expr LT expr .)
    POOL            reduce using rule 44 (expr -> expr LT expr .)
    ELSE            reduce using rule 44 (expr -> expr LT expr .)
    FI              reduce using rule 44 (expr -> expr LT expr .)
    IN              reduce using rule 44 (expr -> expr LT expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65

  ! DOT             [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! AT              [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! PLUS            [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! TIMES           [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! DIVIDE          [ reduce using rule 44 (expr -> expr LT expr .) ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 92

    (18) expr -> expr AT TYPE . DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr AT TYPE . DOT IDENTIFIER LPAREN RPAREN

    DOT             shift and go to state 107


state 93

    (40) expr -> expr PLUS expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 40 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 40 (expr -> expr PLUS expr .)
    LT              reduce using rule 40 (expr -> expr PLUS expr .)
    LE              reduce using rule 40 (expr -> expr PLUS expr .)
    EQUALS          reduce using rule 40 (expr -> expr PLUS expr .)
    SEMI            reduce using rule 40 (expr -> expr PLUS expr .)
    LOOP            reduce using rule 40 (expr -> expr PLUS expr .)
    OF              reduce using rule 40 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 40 (expr -> expr PLUS expr .)
    THEN            reduce using rule 40 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 40 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 40 (expr -> expr PLUS expr .)
    POOL            reduce using rule 40 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 40 (expr -> expr PLUS expr .)
    FI              reduce using rule 40 (expr -> expr PLUS expr .)
    IN              reduce using rule 40 (expr -> expr PLUS expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65

  ! DOT             [ reduce using rule 40 (expr -> expr PLUS expr .) ]
  ! AT              [ reduce using rule 40 (expr -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 40 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 40 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 94

    (41) expr -> expr MINUS expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    PLUS            reduce using rule 41 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 41 (expr -> expr MINUS expr .)
    LT              reduce using rule 41 (expr -> expr MINUS expr .)
    LE              reduce using rule 41 (expr -> expr MINUS expr .)
    EQUALS          reduce using rule 41 (expr -> expr MINUS expr .)
    SEMI            reduce using rule 41 (expr -> expr MINUS expr .)
    LOOP            reduce using rule 41 (expr -> expr MINUS expr .)
    OF              reduce using rule 41 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 41 (expr -> expr MINUS expr .)
    THEN            reduce using rule 41 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 41 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 41 (expr -> expr MINUS expr .)
    POOL            reduce using rule 41 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 41 (expr -> expr MINUS expr .)
    FI              reduce using rule 41 (expr -> expr MINUS expr .)
    IN              reduce using rule 41 (expr -> expr MINUS expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65

  ! DOT             [ reduce using rule 41 (expr -> expr MINUS expr .) ]
  ! AT              [ reduce using rule 41 (expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 41 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 41 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 70 ]
  ! MINUS           [ shift and go to state 71 ]
  ! LT              [ shift and go to state 68 ]
  ! LE              [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 66 ]


state 95

    (16) expr -> expr DOT IDENTIFIER . LPAREN exprs RPAREN
    (17) expr -> expr DOT IDENTIFIER . LPAREN RPAREN

    LPAREN          shift and go to state 108


state 96

    (29) expr -> LET bindings IN . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 109

state 97

    (30) bindings -> IDENTIFIER COLON . TYPE LARROW expr bindings_tail
    (31) bindings -> IDENTIFIER COLON . TYPE bindings_tail

    TYPE            shift and go to state 110


state 98

    (9) feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr . RBRACE
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    RBRACE          shift and go to state 111
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 99

    (8) feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE . expr RBRACE
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 112

state 100

    (25) expr -> WHILE expr LOOP expr . POOL
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    POOL            shift and go to state 113
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 101

    (35) expr -> CASE expr OF cases . ESAC

    ESAC            shift and go to state 114


state 102

    (36) cases -> IDENTIFIER . COLON TYPE RARROW expr SEMI cases
    (37) cases -> IDENTIFIER . COLON TYPE RARROW expr SEMI

    COLON           shift and go to state 115


state 103

    (22) exprs -> expr COMMA . exprs
    (22) exprs -> . expr COMMA exprs
    (23) exprs -> . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 81
    exprs                          shift and go to state 116

state 104

    (20) expr -> IDENTIFIER LPAREN exprs RPAREN .

    DOT             reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    AT              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    PLUS            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    MINUS           reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    TIMES           reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    DIVIDE          reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    LT              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    LE              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    EQUALS          reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    SEMI            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    LOOP            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    OF              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    RPAREN          reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    THEN            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    COMMA           reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    RBRACE          reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    POOL            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    ELSE            reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    FI              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)
    IN              reduce using rule 20 (expr -> IDENTIFIER LPAREN exprs RPAREN .)


state 105

    (24) expr -> IF expr THEN expr . ELSE expr FI
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    ELSE            shift and go to state 117
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 106

    (27) exprsemi -> expr SEMI exprsemi .

    RBRACE          reduce using rule 27 (exprsemi -> expr SEMI exprsemi .)


state 107

    (18) expr -> expr AT TYPE DOT . IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr AT TYPE DOT . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 118


state 108

    (16) expr -> expr DOT IDENTIFIER LPAREN . exprs RPAREN
    (17) expr -> expr DOT IDENTIFIER LPAREN . RPAREN
    (22) exprs -> . expr COMMA exprs
    (23) exprs -> . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    RPAREN          shift and go to state 119
    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 81
    exprs                          shift and go to state 120

state 109

    (29) expr -> LET bindings IN expr .
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            reduce using rule 29 (expr -> LET bindings IN expr .)
    LOOP            reduce using rule 29 (expr -> LET bindings IN expr .)
    OF              reduce using rule 29 (expr -> LET bindings IN expr .)
    RPAREN          reduce using rule 29 (expr -> LET bindings IN expr .)
    THEN            reduce using rule 29 (expr -> LET bindings IN expr .)
    COMMA           reduce using rule 29 (expr -> LET bindings IN expr .)
    RBRACE          reduce using rule 29 (expr -> LET bindings IN expr .)
    POOL            reduce using rule 29 (expr -> LET bindings IN expr .)
    ELSE            reduce using rule 29 (expr -> LET bindings IN expr .)
    FI              reduce using rule 29 (expr -> LET bindings IN expr .)
    IN              reduce using rule 29 (expr -> LET bindings IN expr .)
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66

  ! DOT             [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! AT              [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! PLUS            [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! MINUS           [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! TIMES           [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! DIVIDE          [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! LT              [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! LE              [ reduce using rule 29 (expr -> LET bindings IN expr .) ]
  ! EQUALS          [ reduce using rule 29 (expr -> LET bindings IN expr .) ]


state 110

    (30) bindings -> IDENTIFIER COLON TYPE . LARROW expr bindings_tail
    (31) bindings -> IDENTIFIER COLON TYPE . bindings_tail
    (32) bindings_tail -> . COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> . COMMA IDENTIFIER COLON TYPE bindings_tail
    (34) bindings_tail -> .

    LARROW          shift and go to state 122
    COMMA           shift and go to state 123
    IN              reduce using rule 34 (bindings_tail -> .)

    bindings_tail                  shift and go to state 121

state 111

    (9) feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE .

    SEMI            reduce using rule 9 (feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE .)


state 112

    (8) feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr . RBRACE
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    RBRACE          shift and go to state 124
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 113

    (25) expr -> WHILE expr LOOP expr POOL .

    DOT             reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    AT              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    PLUS            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    MINUS           reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    TIMES           reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    DIVIDE          reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    LT              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    EQUALS          reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    SEMI            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    RPAREN          reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    COMMA           reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    RBRACE          reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 25 (expr -> WHILE expr LOOP expr POOL .)


state 114

    (35) expr -> CASE expr OF cases ESAC .

    DOT             reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    AT              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    PLUS            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    MINUS           reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    TIMES           reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    DIVIDE          reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    LT              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    LE              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    EQUALS          reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    SEMI            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    LOOP            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    OF              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    RPAREN          reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    THEN            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    COMMA           reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    RBRACE          reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    POOL            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    ELSE            reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    FI              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)
    IN              reduce using rule 35 (expr -> CASE expr OF cases ESAC .)


state 115

    (36) cases -> IDENTIFIER COLON . TYPE RARROW expr SEMI cases
    (37) cases -> IDENTIFIER COLON . TYPE RARROW expr SEMI

    TYPE            shift and go to state 125


state 116

    (22) exprs -> expr COMMA exprs .

    RPAREN          reduce using rule 22 (exprs -> expr COMMA exprs .)


state 117

    (24) expr -> IF expr THEN expr ELSE . expr FI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 126

state 118

    (18) expr -> expr AT TYPE DOT IDENTIFIER . LPAREN exprs RPAREN
    (19) expr -> expr AT TYPE DOT IDENTIFIER . LPAREN RPAREN

    LPAREN          shift and go to state 127


state 119

    (17) expr -> expr DOT IDENTIFIER LPAREN RPAREN .

    DOT             reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    AT              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    SEMI            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    LOOP            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    OF              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    THEN            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    POOL            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    FI              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 17 (expr -> expr DOT IDENTIFIER LPAREN RPAREN .)


state 120

    (16) expr -> expr DOT IDENTIFIER LPAREN exprs . RPAREN

    RPAREN          shift and go to state 128


state 121

    (31) bindings -> IDENTIFIER COLON TYPE bindings_tail .

    IN              reduce using rule 31 (bindings -> IDENTIFIER COLON TYPE bindings_tail .)


state 122

    (30) bindings -> IDENTIFIER COLON TYPE LARROW . expr bindings_tail
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 129

state 123

    (32) bindings_tail -> COMMA . IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> COMMA . IDENTIFIER COLON TYPE bindings_tail

    IDENTIFIER      shift and go to state 130


state 124

    (8) feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE .

    SEMI            reduce using rule 8 (feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE .)


state 125

    (36) cases -> IDENTIFIER COLON TYPE . RARROW expr SEMI cases
    (37) cases -> IDENTIFIER COLON TYPE . RARROW expr SEMI

    RARROW          shift and go to state 131


state 126

    (24) expr -> IF expr THEN expr ELSE expr . FI
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    FI              shift and go to state 132
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 127

    (18) expr -> expr AT TYPE DOT IDENTIFIER LPAREN . exprs RPAREN
    (19) expr -> expr AT TYPE DOT IDENTIFIER LPAREN . RPAREN
    (22) exprs -> . expr COMMA exprs
    (23) exprs -> . expr
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    RPAREN          shift and go to state 133
    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 81
    exprs                          shift and go to state 134

state 128

    (16) expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .

    DOT             reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    AT              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    PLUS            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    MINUS           reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    TIMES           reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    DIVIDE          reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    LT              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    LE              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    EQUALS          reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    SEMI            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    LOOP            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    OF              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    RPAREN          reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    THEN            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    COMMA           reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    RBRACE          reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    POOL            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    ELSE            reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    FI              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)
    IN              reduce using rule 16 (expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN .)


state 129

    (30) bindings -> IDENTIFIER COLON TYPE LARROW expr . bindings_tail
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr
    (32) bindings_tail -> . COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> . COMMA IDENTIFIER COLON TYPE bindings_tail
    (34) bindings_tail -> .

    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66
    COMMA           shift and go to state 123
    IN              reduce using rule 34 (bindings_tail -> .)

    bindings_tail                  shift and go to state 135

state 130

    (32) bindings_tail -> COMMA IDENTIFIER . COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> COMMA IDENTIFIER . COLON TYPE bindings_tail

    COLON           shift and go to state 136


state 131

    (36) cases -> IDENTIFIER COLON TYPE RARROW . expr SEMI cases
    (37) cases -> IDENTIFIER COLON TYPE RARROW . expr SEMI
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 137

state 132

    (24) expr -> IF expr THEN expr ELSE expr FI .

    DOT             reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    AT              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    PLUS            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    MINUS           reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    TIMES           reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    DIVIDE          reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    LT              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    EQUALS          reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    SEMI            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    RPAREN          reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    COMMA           reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    RBRACE          reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 24 (expr -> IF expr THEN expr ELSE expr FI .)


state 133

    (19) expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .

    DOT             reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    AT              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    SEMI            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    LOOP            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    OF              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    THEN            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    POOL            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    FI              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 19 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN .)


state 134

    (18) expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs . RPAREN

    RPAREN          shift and go to state 138


state 135

    (30) bindings -> IDENTIFIER COLON TYPE LARROW expr bindings_tail .

    IN              reduce using rule 30 (bindings -> IDENTIFIER COLON TYPE LARROW expr bindings_tail .)


state 136

    (32) bindings_tail -> COMMA IDENTIFIER COLON . TYPE LARROW expr bindings_tail
    (33) bindings_tail -> COMMA IDENTIFIER COLON . TYPE bindings_tail

    TYPE            shift and go to state 139


state 137

    (36) cases -> IDENTIFIER COLON TYPE RARROW expr . SEMI cases
    (37) cases -> IDENTIFIER COLON TYPE RARROW expr . SEMI
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr

    SEMI            shift and go to state 140
    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66


state 138

    (18) expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .

    DOT             reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    AT              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    PLUS            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    MINUS           reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    TIMES           reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    DIVIDE          reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    LT              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    LE              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    EQUALS          reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    SEMI            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    LOOP            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    OF              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    RPAREN          reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    THEN            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    COMMA           reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    RBRACE          reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    POOL            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    ELSE            reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    FI              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)
    IN              reduce using rule 18 (expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN .)


state 139

    (32) bindings_tail -> COMMA IDENTIFIER COLON TYPE . LARROW expr bindings_tail
    (33) bindings_tail -> COMMA IDENTIFIER COLON TYPE . bindings_tail
    (32) bindings_tail -> . COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> . COMMA IDENTIFIER COLON TYPE bindings_tail
    (34) bindings_tail -> .

    LARROW          shift and go to state 142
    COMMA           shift and go to state 123
    IN              reduce using rule 34 (bindings_tail -> .)

    bindings_tail                  shift and go to state 141

state 140

    (36) cases -> IDENTIFIER COLON TYPE RARROW expr SEMI . cases
    (37) cases -> IDENTIFIER COLON TYPE RARROW expr SEMI .
    (36) cases -> . IDENTIFIER COLON TYPE RARROW expr SEMI cases
    (37) cases -> . IDENTIFIER COLON TYPE RARROW expr SEMI

    ESAC            reduce using rule 37 (cases -> IDENTIFIER COLON TYPE RARROW expr SEMI .)
    IDENTIFIER      shift and go to state 102

    cases                          shift and go to state 143

state 141

    (33) bindings_tail -> COMMA IDENTIFIER COLON TYPE bindings_tail .

    IN              reduce using rule 33 (bindings_tail -> COMMA IDENTIFIER COLON TYPE bindings_tail .)


state 142

    (32) bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW . expr bindings_tail
    (15) expr -> . IDENTIFIER LARROW expr
    (16) expr -> . expr DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> . expr DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> . expr AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (20) expr -> . IDENTIFIER LPAREN exprs RPAREN
    (21) expr -> . IDENTIFIER LPAREN RPAREN
    (24) expr -> . IF expr THEN expr ELSE expr FI
    (25) expr -> . WHILE expr LOOP expr POOL
    (26) expr -> . LBRACE exprsemi RBRACE
    (29) expr -> . LET bindings IN expr
    (35) expr -> . CASE expr OF cases ESAC
    (38) expr -> . NEW TYPE
    (39) expr -> . ISVOID expr
    (40) expr -> . expr PLUS expr
    (41) expr -> . expr MINUS expr
    (42) expr -> . expr TIMES expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr LT expr
    (45) expr -> . expr LE expr
    (46) expr -> . expr EQUALS expr
    (47) expr -> . NOT expr
    (48) expr -> . TILDE expr
    (49) expr -> . LPAREN expr RPAREN
    (50) expr -> . IDENTIFIER
    (51) expr -> . INTEGER
    (52) expr -> . STRING
    (53) expr -> . TRUE
    (54) expr -> . FALSE

    IDENTIFIER      shift and go to state 40
    IF              shift and go to state 43
    WHILE           shift and go to state 32
    LBRACE          shift and go to state 44
    LET             shift and go to state 47
    CASE            shift and go to state 36
    NEW             shift and go to state 33
    ISVOID          shift and go to state 37
    NOT             shift and go to state 41
    TILDE           shift and go to state 38
    LPAREN          shift and go to state 42
    INTEGER         shift and go to state 34
    STRING          shift and go to state 39
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45

    expr                           shift and go to state 144

state 143

    (36) cases -> IDENTIFIER COLON TYPE RARROW expr SEMI cases .

    ESAC            reduce using rule 36 (cases -> IDENTIFIER COLON TYPE RARROW expr SEMI cases .)


state 144

    (32) bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW expr . bindings_tail
    (16) expr -> expr . DOT IDENTIFIER LPAREN exprs RPAREN
    (17) expr -> expr . DOT IDENTIFIER LPAREN RPAREN
    (18) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN
    (19) expr -> expr . AT TYPE DOT IDENTIFIER LPAREN RPAREN
    (40) expr -> expr . PLUS expr
    (41) expr -> expr . MINUS expr
    (42) expr -> expr . TIMES expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . LT expr
    (45) expr -> expr . LE expr
    (46) expr -> expr . EQUALS expr
    (32) bindings_tail -> . COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail
    (33) bindings_tail -> . COMMA IDENTIFIER COLON TYPE bindings_tail
    (34) bindings_tail -> .

    DOT             shift and go to state 72
    AT              shift and go to state 69
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 65
    LT              shift and go to state 68
    LE              shift and go to state 64
    EQUALS          shift and go to state 66
    COMMA           shift and go to state 123
    IN              reduce using rule 34 (bindings_tail -> .)

    bindings_tail                  shift and go to state 145

state 145

    (32) bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail .

    IN              reduce using rule 32 (bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail .)

