
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CEB22F5D947F61D949598E5C8359DB64'
    
_lr_action_items = {'THEN':([34,35,39,40,45,53,55,56,59,61,79,80,83,86,87,88,89,90,91,93,94,104,109,113,114,119,128,132,133,138,],[-51,-53,-52,-50,-54,-38,-39,-48,-47,84,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-25,-35,-17,-16,-24,-19,-18,]),'DIVIDE':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,65,65,-38,65,-39,-48,65,65,65,65,65,-21,65,-49,-26,65,-43,65,-42,65,65,65,65,65,-20,65,65,65,-25,-35,-17,65,-16,65,-24,-19,65,-18,65,]),'WHILE':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FI':([34,35,39,40,45,53,55,56,59,79,80,83,86,87,88,89,90,91,93,94,104,109,113,114,119,126,128,132,133,138,],[-51,-53,-52,-50,-54,-38,-39,-48,-47,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-25,-35,-17,132,-16,-24,-19,-18,]),'NEW':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'RARROW':([125,],[131,]),'TRUE':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,71,71,-38,71,-39,-48,71,71,71,71,71,-21,71,-49,-26,71,-43,71,-42,71,-40,-41,71,71,-20,71,71,71,-25,-35,-17,71,-16,71,-24,-19,71,-18,71,]),'DOT':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,92,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,72,72,-38,72,72,72,72,72,72,72,72,-21,72,-49,-26,72,72,72,72,72,107,72,72,72,72,-20,72,72,72,-25,-35,-17,72,-16,72,-24,-19,72,-18,72,]),'STRING':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CASE':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LE':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,64,64,-38,64,-39,-48,64,64,64,64,64,-21,64,-49,-26,None,-43,None,-42,None,-40,-41,64,64,-20,64,64,64,-25,-35,-17,64,-16,64,-24,-19,64,-18,64,]),'RPAREN':([17,23,25,34,35,39,40,45,49,50,53,55,56,58,59,60,79,80,81,82,83,86,87,88,89,90,91,93,94,104,108,109,113,114,116,119,120,127,128,132,133,134,138,],[22,-13,31,-51,-53,-52,-50,-54,-12,-14,-38,-39,-48,80,-47,83,-15,-21,-23,104,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,119,-29,-25,-35,-22,-17,128,133,-16,-24,-19,138,-18,]),'SEMI':([4,11,18,21,26,34,35,39,40,45,46,53,55,56,59,62,79,80,83,86,87,88,89,90,91,93,94,104,109,111,113,114,119,124,128,132,133,137,138,],[6,15,-5,-11,-4,-51,-53,-52,-50,-54,-10,-38,-39,-48,-47,85,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-9,-25,-35,-17,-8,-16,-24,-19,140,-18,]),'PLUS':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,70,70,-38,70,-39,-48,70,70,70,70,70,-21,70,-49,-26,70,-43,70,-42,70,-40,-41,70,70,-20,70,70,70,-25,-35,-17,70,-16,70,-24,-19,70,-18,70,]),'ISVOID':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'LARROW':([21,40,110,139,],[27,57,122,142,]),'LT':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,68,68,-38,68,-39,-48,68,68,68,68,68,-21,68,-49,-26,None,-43,None,-42,None,-40,-41,68,68,-20,68,68,68,-25,-35,-17,68,-16,68,-24,-19,68,-18,68,]),'COLON':([12,22,24,31,74,102,130,],[16,28,30,51,97,115,136,]),'TILDE':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'INTEGER':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'IDENTIFIER':([8,14,15,17,27,29,32,36,37,38,41,42,43,44,47,57,58,64,65,66,67,68,70,71,72,75,77,78,84,85,96,99,103,107,108,117,122,123,127,131,140,142,],[12,12,12,24,40,24,40,40,40,40,40,40,40,40,74,40,40,40,40,40,40,40,40,40,95,40,40,102,40,40,40,40,40,118,40,40,40,130,40,40,102,40,]),'CLASS':([0,6,],[2,2,]),'$end':([1,3,6,9,],[0,-1,-3,-2,]),'INHERITS':([5,],[7,]),'RBRACE':([8,13,14,15,19,20,34,35,39,40,45,53,55,56,59,63,79,80,83,85,86,87,88,89,90,91,93,94,98,104,106,109,112,113,114,119,128,132,133,138,],[-7,18,-7,-7,26,-6,-51,-53,-52,-50,-54,-38,-39,-48,-47,86,-15,-21,-49,-28,-26,-45,-43,-46,-42,-44,-40,-41,111,-20,-27,-29,124,-25,-35,-17,-16,-24,-19,-18,]),'EQUALS':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,66,66,-38,66,-39,-48,66,66,66,66,66,-21,66,-49,-26,None,-43,None,-42,None,-40,-41,66,66,-20,66,66,66,-25,-35,-17,66,-16,66,-24,-19,66,-18,66,]),'TIMES':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,67,67,-38,67,-39,-48,67,67,67,67,67,-21,67,-49,-26,67,-43,67,-42,67,67,67,67,67,-20,67,67,67,-25,-35,-17,67,-16,67,-24,-19,67,-18,67,]),'ESAC':([101,140,143,],[114,-37,-36,]),'AT':([34,35,39,40,45,46,52,53,54,55,56,59,60,61,62,79,80,81,83,86,87,88,89,90,91,93,94,98,100,104,105,109,112,113,114,119,126,128,129,132,133,137,138,144,],[-51,-53,-52,-50,-54,69,69,-38,69,69,69,69,69,69,69,69,-21,69,-49,-26,69,69,69,69,69,69,69,69,69,-20,69,69,69,-25,-35,-17,69,-16,69,-24,-19,69,-18,69,]),'LPAREN':([12,27,32,36,37,38,40,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,95,96,99,103,108,117,118,122,127,131,142,],[17,42,42,42,42,42,58,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,108,42,42,42,42,42,127,42,42,42,42,]),'IN':([34,35,39,40,45,53,55,56,59,73,79,80,83,86,87,88,89,90,91,93,94,104,109,110,113,114,119,121,128,129,132,133,135,138,139,141,144,145,],[-51,-53,-52,-50,-54,-38,-39,-48,-47,96,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-34,-25,-35,-17,-31,-16,-34,-24,-19,-30,-18,-34,-33,-34,-32,]),'ELSE':([34,35,39,40,45,53,55,56,59,79,80,83,86,87,88,89,90,91,93,94,104,105,109,113,114,119,128,132,133,138,],[-51,-53,-52,-50,-54,-38,-39,-48,-47,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,117,-29,-25,-35,-17,-16,-24,-19,-18,]),'POOL':([34,35,39,40,45,53,55,56,59,79,80,83,86,87,88,89,90,91,93,94,100,104,109,113,114,119,128,132,133,138,],[-51,-53,-52,-50,-54,-38,-39,-48,-47,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,113,-20,-29,-25,-35,-17,-16,-24,-19,-18,]),'IF':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LBRACE':([5,10,27,32,36,37,38,41,42,43,44,48,57,58,64,65,66,67,68,70,71,75,76,77,84,85,96,99,103,108,117,122,127,131,142,],[8,14,44,44,44,44,44,44,44,44,44,75,44,44,44,44,44,44,44,44,44,44,99,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'OF':([34,35,39,40,45,53,54,55,56,59,79,80,83,86,87,88,89,90,91,93,94,104,109,113,114,119,128,132,133,138,],[-51,-53,-52,-50,-54,-38,78,-39,-48,-47,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-25,-35,-17,-16,-24,-19,-18,]),'LET':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NOT':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'COMMA':([23,34,35,39,40,45,50,53,55,56,59,79,80,81,83,86,87,88,89,90,91,93,94,104,109,110,113,114,119,128,129,132,133,138,139,144,],[29,-51,-53,-52,-50,-54,-14,-38,-39,-48,-47,-15,-21,103,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,123,-25,-35,-17,-16,123,-24,-19,-18,123,123,]),'TYPE':([2,7,16,28,30,33,51,69,97,115,136,],[5,10,21,48,50,53,76,92,110,125,139,]),'LOOP':([34,35,39,40,45,52,53,55,56,59,79,80,83,86,87,88,89,90,91,93,94,104,109,113,114,119,128,132,133,138,],[-51,-53,-52,-50,-54,77,-38,-39,-48,-47,-15,-21,-49,-26,-45,-43,-46,-42,-44,-40,-41,-20,-29,-25,-35,-17,-16,-24,-19,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'features':([8,14,15,],[13,19,20,]),'bindings_tail':([110,129,139,144,],[121,135,141,145,]),'expr':([27,32,36,37,38,41,42,43,44,57,58,64,65,66,67,68,70,71,75,77,84,85,96,99,103,108,117,122,127,131,142,],[46,52,54,55,56,59,60,61,62,79,81,87,88,89,90,91,93,94,98,100,105,62,109,112,81,81,126,129,81,137,144,]),'feature':([8,14,15,],[11,11,11,]),'exprs':([58,103,108,127,],[82,116,120,134,]),'classes':([0,6,],[3,9,]),'exprsemi':([44,85,],[63,106,]),'bindings':([47,],[73,]),'formal':([17,29,],[23,23,]),'cases':([78,140,],[101,143,]),'class':([0,6,],[4,4,]),'formals':([17,29,],[25,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classes','program',1,'p_program','main.py',90),
  ('classes -> class SEMI classes','classes',3,'p_classes','main.py',96),
  ('classes -> class SEMI','classes',2,'p_classes_base','main.py',101),
  ('class -> CLASS TYPE INHERITS TYPE LBRACE features RBRACE','class',7,'p_class_inherits','main.py',106),
  ('class -> CLASS TYPE LBRACE features RBRACE','class',5,'p_class_no_inherits','main.py',111),
  ('features -> feature SEMI features','features',3,'p_features','main.py',116),
  ('features -> <empty>','features',0,'p_features_base','main.py',121),
  ('feature -> IDENTIFIER LPAREN formals RPAREN COLON TYPE LBRACE expr RBRACE','feature',9,'p_feature_method_formals','main.py',130),
  ('feature -> IDENTIFIER LPAREN RPAREN COLON TYPE LBRACE expr RBRACE','feature',8,'p_feature_method','main.py',135),
  ('feature -> IDENTIFIER COLON TYPE LARROW expr','feature',5,'p_feature_init','main.py',140),
  ('feature -> IDENTIFIER COLON TYPE','feature',3,'p_feature','main.py',145),
  ('formals -> formal COMMA formals','formals',3,'p_formals','main.py',150),
  ('formals -> formal','formals',1,'p_formals_base','main.py',155),
  ('formal -> IDENTIFIER COLON TYPE','formal',3,'p_formal','main.py',163),
  ('expr -> IDENTIFIER LARROW expr','expr',3,'p_expr_assign','main.py',172),
  ('expr -> expr DOT IDENTIFIER LPAREN exprs RPAREN','expr',6,'p_expr_dynamic_dispatch_params','main.py',181),
  ('expr -> expr DOT IDENTIFIER LPAREN RPAREN','expr',5,'p_expr_dynamic_dispatch','main.py',187),
  ('expr -> expr AT TYPE DOT IDENTIFIER LPAREN exprs RPAREN','expr',8,'p_expr_static_dispatch_params','main.py',195),
  ('expr -> expr AT TYPE DOT IDENTIFIER LPAREN RPAREN','expr',7,'p_expr_static_dispatch','main.py',201),
  ('expr -> IDENTIFIER LPAREN exprs RPAREN','expr',4,'p_expr_dispatch_params','main.py',209),
  ('expr -> IDENTIFIER LPAREN RPAREN','expr',3,'p_expr_dispatch','main.py',215),
  ('exprs -> expr COMMA exprs','exprs',3,'p_exprs','main.py',221),
  ('exprs -> expr','exprs',1,'p_exprs_base','main.py',226),
  ('expr -> IF expr THEN expr ELSE expr FI','expr',7,'p_expr_if','main.py',234),
  ('expr -> WHILE expr LOOP expr POOL','expr',5,'p_expr_while','main.py',242),
  ('expr -> LBRACE exprsemi RBRACE','expr',3,'p_block','main.py',249),
  ('exprsemi -> expr SEMI exprsemi','exprsemi',3,'p_exprsemi','main.py',255),
  ('exprsemi -> expr SEMI','exprsemi',2,'p_exprsemi_base','main.py',260),
  ('expr -> LET bindings IN expr','expr',4,'p_expr_let','main.py',268),
  ('bindings -> IDENTIFIER COLON TYPE LARROW expr bindings_tail','bindings',6,'p_bindings_init','main.py',275),
  ('bindings -> IDENTIFIER COLON TYPE bindings_tail','bindings',4,'p_bindings_no_init','main.py',280),
  ('bindings_tail -> COMMA IDENTIFIER COLON TYPE LARROW expr bindings_tail','bindings_tail',7,'p_bindings_tail_init','main.py',285),
  ('bindings_tail -> COMMA IDENTIFIER COLON TYPE bindings_tail','bindings_tail',5,'p_bindings_tail_no_init','main.py',290),
  ('bindings_tail -> <empty>','bindings_tail',0,'p_bindings_base','main.py',294),
  ('expr -> CASE expr OF cases ESAC','expr',5,'p_expr_case','main.py',300),
  ('cases -> IDENTIFIER COLON TYPE RARROW expr SEMI cases','cases',7,'p_cases','main.py',307),
  ('cases -> IDENTIFIER COLON TYPE RARROW expr SEMI','cases',6,'p_cases_base','main.py',312),
  ('expr -> NEW TYPE','expr',2,'p_expr_new','main.py',321),
  ('expr -> ISVOID expr','expr',2,'p_expr_isvoid','main.py',328),
  ('expr -> expr PLUS expr','expr',3,'p_expr_plus','main.py',335),
  ('expr -> expr MINUS expr','expr',3,'p_expr_minus','main.py',341),
  ('expr -> expr TIMES expr','expr',3,'p_expr_times','main.py',347),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_divide','main.py',353),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','main.py',360),
  ('expr -> expr LE expr','expr',3,'p_expr_le','main.py',366),
  ('expr -> expr EQUALS expr','expr',3,'p_expr_equals','main.py',372),
  ('expr -> NOT expr','expr',2,'p_expr_not','main.py',379),
  ('expr -> TILDE expr','expr',2,'p_expr_negate','main.py',386),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','main.py',392),
  ('expr -> IDENTIFIER','expr',1,'p_expr_identifier','main.py',399),
  ('expr -> INTEGER','expr',1,'p_expr_integer','main.py',406),
  ('expr -> STRING','expr',1,'p_expr_string','main.py',412),
  ('expr -> TRUE','expr',1,'p_expr_true','main.py',418),
  ('expr -> FALSE','expr',1,'p_expr_false','main.py',424),
]
